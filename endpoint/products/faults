## Faults [/faults]
Faults resource allows you to retrieve the faults for a logged in customer based on services products. Responses will be returned in JSON format only.

### Fault
Fault as a resource represents following information

| Property | Type | As request | As response | Description | 
| :--------- | :------------ | :------------ | :------------ | -----------------------------------------------------|
| id | String | `Not Applicable` | `Returned always` | Id of the fault which is returned from SAP for each fault associated to services product. |
| title | String | `Not Applicable` | `Returned always` | Title holds the brief notes of the fault. |
| description | String | `Not Applicable` | `Returned always` | Description defines the exact problem statement of the fault. |

### Retrieve faults [GET /faults{?account}]
+ Parameters

    + account (string, required) - Account number of the customer. List of faults will be returned for the account.
    
+ Request

    + Headers

            Authorization: Bearer {accesstoken}
            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

+ Response 200 (application/json)

            {
                "status": "SUCCESS",
                "data": {
                    "faults": [
                        {
                            "id": "F0001",
                            "title": "Boiler",
                            "description": "Problem with Boiler/Central heating"
                        },
                        {
                            "id": "F0003",
                            "title": "Radiator",
                            "description": "Problem with Radiator"
                        },
                        {
                            "id": "F0003",
                            "title": "Radiator",
                            "description": "Problem with Radiator"
                        },
                        {
                            "id": "F0005",
                            "title": "Fusebox",
                            "description": "Fuse blowing within fusebox"
                        }
                    ]
                },
                "errors": [],
                "meta": {}
            }

+ Response 401 (application/json)

            {
                "status": "FAIL",
                "data": {},
                "errors": [
                    {
                        "code": "authorize",
                        "message": "access_denied"
                    }
                ],
                "meta": {}
            }

+ Response 400 (application/json)

            {
                "status": "FAIL",
                "data": {},
                "errors": [
                    {
                        "code": "accountNumber",
                        "message": "error.client.accountnumber.invalid"
                    }
                ],
                "meta": {}
            }

+ Response 403 (application/json)

            {
                "status": "FAIL",
                "data": {},
                "errors": [
                    {
                        "code": "account",
                        "message": "error.client.account.invalid"
                    }
                ],
                "meta": {}
            }

+ Response 403 (application/json)

            {
                "status": "FAIL",
                "data": {},
                "errors": [
                    {
                        "code": "productHolding",
                        "message": "error.client.productHolding.invalid"
                   }
                ],
                "meta": {}
            }

+ Response 404 (application/json)

            {
                "status": "FAIL",
                "data": {},
                "errors": [
                    {
                        "code": "fault",
                        "message": "error.client.fault.notFound"
                   }
                ],
                "meta": {}
            }
            
+ Response 500 (application/json)

            {
                "status": "FAIL",
                "data": {},
                "errors": [
                    {
                        "code": "server.error.internal",
                        "message": "An internal error while processing request."
                    }
                ],
                "meta": {}
            }

### Retrieve specific faults [GET /faults/{id}]
+ Parameters

    + id (string, required) - Fault id
    
+ Request

    + Headers

            Authorization: Bearer {accesstoken}
            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

+ Response 200 (application/json)

            {
                "status": "SUCCESS",
                "data": {
                    "fault": {
                        "id": "F0001",
                        "title": "Boiler",
                        "description": "Problem with Boiler/Central heating"
                    }
                },
                "errors": [],
                "meta": {}
            }

+ Response 401 (application/json)

            {
                "status": "FAIL",
                "data": {},
                "errors": [
                    {
                        "code": "authorize",
                        "message": "access_denied"
                    }
                ],
                "meta": {}
            }

+ Response 404 (application/json)

            {
                "status": "FAIL",
                "data": {},
                "errors": [
                    {
                        "code": "fault",
                        "message": "error.client.fault.notFound"
                    }
                ],
                "meta": {}
            }

+ Response 500 (application/json)

            {
                "status": "FAIL",
                "data": {},
                "errors": [
                    {
                        "code": "server.error.internal",
                        "message": "An internal error while processing request."
                    }
                ],
                "meta": {}
            }

### Retrieve faults for specific products [GET /faults{?account,servicesProductHolding*}]
+ Parameters

    + account (string, required) - Account number of the customer. List of faults will be returned for the account.
    + servicesProductHolding (array of strings, optional) - Ids of the services product for the customer. List of faults will be returned for all services products if the product holding is empty
    
+ Request

    + Headers

            Authorization: Bearer {accesstoken}
            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

+ Response 200 (application/json)

            {
                "status": "SUCCESS",
                "data": {
                    "faults": [
                        {
                            "id": "F0001",
                            "title": "Boiler",
                            "description": "Problem with Boiler/Central heating"
                        },
                        {
                            "id": "F0003",
                            "title": "Radiator",
                            "description": "Problem with Radiator"
                        },
                        {
                            "id": "F0003",
                            "title": "Radiator",
                            "description": "Problem with Radiator"
                        }
                    ]
                },
                "errors": [],
                "meta": {}
            }

+ Request No faults found for the request

    + Headers

            Authorization: Bearer {accesstoken}
            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

+ Response 200 (application/json)

            {
                "status": "SUCCESS",
                "data": {
                    "faults": []
                },
                "errors": [],
                "meta": {}
            }
            
+ Response 401 (application/json)

            {
                "status": "FAIL",
                "data": {},
                "errors": [
                    {
                        "code": "authorize",
                        "message": "access_denied"
                    }
                ],
                "meta": {}
            }

+ Response 400 (application/json)

            {
                "status": "FAIL",
                "data": {},
                "errors": [
                    {
                        "code": "accountNumber",
                        "message": "error.client.accountnumber.invalid"
                    }
                ],
                "meta": {}
            }

+ Response 403 (application/json)

            {
                "status": "FAIL",
                "data": {},
                "errors": [
                    {
                        "code": "account",
                        "message": "error.client.account.invalid"
                    }
                ],
                "meta": {}
            }

+ Response 403 (application/json)

            {
                "status": "FAIL",
                "data": {},
                "errors": [
                    {
                        "code": "productHolding",
                        "message": "error.client.productHolding.invalid"
                   }
                ],
                "meta": {}
            }

+ Response 500 (application/json)

            {
                "status": "FAIL",
                "data": {},
                "errors": [
                    {
                        "code": "server.error.internal",
                        "message": "An internal error while processing request."
                    }
                ],
                "meta": {}
            }
