## Product-Features [/product-features]
Product features endpoint allows you to list the features related to product or bundle product. Responses from this endpoint will be returned in JSON format only. Feature will be made up of all the primary characteristics of a product or bundle product to compute its price.

#### Product feature
Product feature as a resource represents following information:

| Property | Type | As request | As response | Description |
| :-------------------- | :---------- | :----------  | :---------- | ------------------------------------------------------------ |
| id | string | `Not applicable` | `Returned always` | Unique id for a product feature. |
| excess | string | `Not applicable` | `Returned always` | Indicates excess which will be any of the following, `0`,`50`,`99`. |
| annualServiceVisit | boolean | `Not applicable` | `Returned always` | Indicates annual service visit. |
| applianceType | string | `Not applicable` | `Returned always` | Indicates the appliance type. Can be empty if there aren't any appliances for the product. |
| paymentMethod | string | `Not applicable` | `Returned always` | Indicates the payment method. |
| levelOfService | string | `Not applicable` | `Returned always` | Indicates the Level of service of the product. |

>`Note:` Format of the product feature id will be `BundleCode|ProductCode|LosCode|ApplianceType|PaymentMethod`. If the product is `individual`, then BundleCode will be `NA`.


### Retrieve the level of service for a specific configuration of a product [GET /product-features{?product,excess,annualServiceVisit,applianceType*,paymentMethod}]

+ Parameters

    + product: abcxsd (required, string) - Product id. Represents a link to Product resource.
    + excess: 0 (optional, string) - If not passed, Default excess level is taken based on product.
    + annualServiceVisit: true (optional, boolean) - If not passed, Default value will be false. Products for which ASV is mandatory, then true has to be passed.
    + applianceType (optional, string) - If not passed, Default appliance type is taken based on product.Multiple appliance types can be passed as parameter based on number of appliances supported by the product.
    + paymentMethod (optional, string) - If not passed, payment method is taken based on product.

+ Request 'Individual products' (application/json)

    + Headers

            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

+ Response 200 (application/json)

            {
                "status": "SUCCESS",
                "data": {
                    "productFeatures": [
                        {
                            "id": "NA|GAK|1S|WAW|MDD",
                            "excess": "0",
                            "annualServiceVisitSelected": true,
                            "applianceType": "WAW",
                            "paymentMethod": "MDD",
                            "levelOfService": "1S"
                        }
                    ]
                },
                "errors": [],
                "meta": {}
            }

+ Request 'Bundle products' (application/json)

    + Headers

            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

+ Response 200 (application/json)

            {
                "status": "SUCCESS",
                "data": {
                    "productFeatures": [
                        {
                            "id": "HC4|HC4-CH|CNI2|BBC|MDD",
                            "excess": "60",
                            "annualServiceVisitSelected": true,
                            "applianceType": "BBC",
                            "paymentMethod": "MDD",
                            "levelOfService": "CNI2"
                        }
                    ]
                },
                "errors": [],
                "meta": {}
            }

+ Request 'Product is invalid' (application/json)

    + Headers

            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

+ Response 404 (application/json)

            {
                "status" : ERROR
                "data": {}
                "errors": [
                    {
                        "code": "product",
                        "message": "error.client.product.notFound"
                    }
                ]
                "meta": {}
            }

+ Request 'Excess is invalid' (application/json)

    + Headers

            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

+ Response 400 (application/json)

            {
                "status" : FAIL
                "data": {}
                "errors": [
                    {
                        "code": "excess",
                        "message": "error.client.excess.inValid"
                    }
                ]
                "meta": {}
            }

+ Request 'Appliance type is invalid' (application/json)

    + Headers

            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

+ Response 400 (application/json)

        {
            "status": "FAIL",
            "data": {},
            "errors": [
                {
                    "code": "applianceType",
                    "message": "error.client.applianceType.inValid"
                }
            ],
            "meta": {}
        }

+ Request 'Payment method is invalid' (application/json)

    + Headers

            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

+ Response 400 (application/json)

        {
            "status": "FAIL",
            "data": {},
            "errors": [
                {
                    "code": "paymentMethod",
                    "message": "error.client.paymentMethod.inValid"
                }
            ],
            "meta": {}
        }

+ Request 'Annual service visit is invalid' (application/json)

    + Headers

            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

+ Response 400 (application/json)

        {
            "status": "FAIL",
            "data": {},
            "errors": [
                {
                    "code": "annualServiceVisit",
                    "message": "error.client.annualServiceVisit.inValid"
                }
            ],
            "meta": {}
        }
