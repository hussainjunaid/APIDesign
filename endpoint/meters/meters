## Group Meters

## Meters Collection [/meters]
Meters endpoint allows you to list / view all the meters of the logged in customer. Responses from this endpoint will be retuned in JSON format only.


#### Meter
Meter as a resource represents following information

| Property | Type | As request | As response | Description |
| :-------------------- | :---------- | :---------- | :---------- | ------------------------------------------------------------ |
| id | string | `Not Applicable` | `Returned always` |  It is a combination of account number, contract number and encoded serial number of the meter, is considered as the unique identifier. |
| numberOfRegisters | number | `Not Applicable` | `Returned always` |  Indicates the number of registers available for the meter. |
| meterPointId | string | `Not Applicable` | `Returned always` |  Meter point identifier (MPRN or MPAN) of the meter, if available. |
| assetNumber | string | `Not Applicable` | `Returned always` |  Asset number of the meter, if available. |
| serialNumber | string | `Not Applicable` | `Returned always` |  Serial number of the meter, if available. |
| meterId | string | `Not Applicable` | `Returned always` |  Meter identifier of the meter, if available. |
| meterType | string | `Not Applicable` | `Returned always` |  Meter type can be gas, elecsr, elec2r or elecTou. |
| account | string | `Not Applicable` | `Returned always` |  Account number to which the meter is linked, if available. | 
| contractType | string | `Not Applicable` | `Returned always` |  Contract type can be either Gas or Electricity. |
| contractNumber | String | `Not Applicable` | `Returned always` |  Contract number to which the meter is linked, if available. |
| complexityCode | String | `Not Applicable` | `Returned always` |  Complexity code of the meter, if available. |
| smartMeter | boolean | `Not Applicable` | `Returned always` |  Indicates the meter as a smart meter if the value is true. |
| complexMeter | boolean | `Not Applicable` | `Returned always` |  Indicates the meter as a complex meter if the value is true. |
| registers | Array of Register | `Not Applicable` | `Returned always` |  Registers associated with the meter. |

#### Register
Register as a resource represents following information

| Property | Type | As request | As response | Description |
| :-------------------- | :---------- | :---------- | :---------- | ------------------------------------------------------------ |
| id | string | `Not Applicable` | `Returned always` |  Register number of the register, is considered as the unique identifier |
| numberOfDials | number | `Not Applicable` | `Returned always` |  Indicates the number of dials available for the register. |
| registerName | string | `Not Applicable` | `Returned always` |  Name of the register, if available. |
| usageType | string | `Not Applicable` | `Returned always` |  Usage type of the register, if available. |
| readingType | string | `Not Applicable` | `Returned always` |  Last reading type code, if available. |
| readingDate | string | `Not Applicable` | `Returned always` |  Last reading date in dd/MM/yyyy format, if available. |
| reading | string | `Not Applicable` | `Returned always` |  Last reading, if available. |
| meterReadType | string | `Not Applicable` | `Returned always` |  Meter reading type description, if available. |
| readingClassification | string | `Not Applicable` | `Returned always` |  Meter reading classification description, it mentions whether the reading is "Actual" or "Estimated", if available. |
| nonCyclicToleranceFlag | string | `Not Applicable` | `Returned always` |  Non cyclic tolerance flag, if available. |
| validationFailureCode | string | `Not Applicable` | `Returned always` |  Validation Failure Code, if available. |

### Retrieve All meters [GET /meters]

+ Request

    + Headers

            Authorization: Bearer {accesstoken}
            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

+ Response 200 (application/json)

            {
                "status": "SUCCESS",
                "data": {
                    "meters": [
                        {
                            "numberOfRegisters": 1,
                            "meterPointId": "1343152901",
                            "assetNumber": "000000000010376382",
                            "serialNumber": "G4A02208680401",
                            "meterType": "gas",
                            "smartMeter": false,
                            "id": "850000367878-0550013531-RzRBMDIyMDg2ODA0MDE",
                            "meterId": "3550020532",
                            "complexMeter": false,
                            "registers": [
                                {
                                    "id": "001",
                                    "numberOfDials": 5,
                                    "readingClassification": "Actual",
                                    "reading": "03287",
                                    "readingDate": "19/11/2013",
                                    "meterReadType": "DayRead",
                                    "nonCyclicToleranceFlag": "",
                                    "validationFailureCode": "",
                                    "usageType": "single",
                                    "readingType": "1801",
                                    "registerName": "Day"
                                }
                            ],
                            "contractType": "Gas",
                            "account": "850000367878",
                            "complexityCode": "0",
                            "contractNumber": "0550013531"
                        },
                        {
                            "numberOfRegisters": 1,
                            "meterPointId": "1591031295962",
                            "assetNumber": "000000000011291701",
                            "serialNumber": "C62L06322",
                            "meterType": "elecsr",
                            "smartMeter": false,
                            "id": "850000367878-2076700195-QzYyTDA2MzIy",
                            "meterId": "3655023137",
                            "complexMeter": false,
                            "registers": [
                                {
                                    "id": "001",
                                    "numberOfDials": 5,
                                    "readingClassification": "Actual",
                                    "reading": "21768",
                                    "readingDate": "19/11/2013",
                                    "meterReadType": "DayRead",
                                    "nonCyclicToleranceFlag": "",
                                    "validationFailureCode": "",
                                    "usageType": "single",
                                    "readingType": "1801",
                                    "registerName": "Standard"
                                }
                            ],
                            "contractType": "Electricity",
                            "account": "850000367878",
                            "complexityCode": "0",
                            "contractNumber": "2076700195"
                        }
                    ]
                },
                "errors": {},
                "meta": {}
            }

+ Response 401 (application/json)

            {
                "status": "FAIL",
                "data": {},
                "errors": [
                    {
                        "code": "authorize",
                        "message": "invalid_request"
                    }
                ],
                "meta": {}
            }

### Retrieve meter for specific accounts [GET /meters{?accountNumber*}]
+ Parameters

  + accountNumber (number) - This is the customers account number

+ Request

    + Headers

            Authorization: Bearer accesstoken
            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

+ Response 200 (application/json)

            {
                "status": "SUCCESS",
                "data": {
                    "meters": [
                        {
                            "numberOfRegisters": 1,
                            "meterPointId": "1343152901",
                            "assetNumber": "000000000010376382",
                            "serialNumber": "G4A02208680401",
                            "meterType": "gas",
                            "smartMeter": false,
                            "id": "850000367878-0550013531-RzRBMDIyMDg2ODA0MDE",
                            "meterId": "3550020532",
                            "complexMeter": false,
                            "registers": [
                                {
                                    "id": "001",
                                    "numberOfDials": 5,
                                    "readingClassification": "Actual",
                                    "reading": "03287",
                                    "readingDate": "19/11/2013",
                                    "meterReadType": "DayRead",
                                    "nonCyclicToleranceFlag": "",
                                    "validationFailureCode": "",
                                    "usageType": "single",
                                    "readingType": "1801",
                                    "registerName": "Day"
                                }
                            ],
                            "contractType": "Gas",
                            "account": "850000367878",
                            "complexityCode": "0",
                            "contractNumber": "0550013531"
                        },
                        {
                            "numberOfRegisters": 1,
                            "meterPointId": "1591031295962",
                            "assetNumber": "000000000011291701",
                            "serialNumber": "C62L06322",
                            "meterType": "elecsr",
                            "smartMeter": false,
                            "id": "850000367878-2076700195-QzYyTDA2MzIy",
                            "meterId": "3655023137",
                            "complexMeter": false,
                            "registers": [
                                {
                                    "id": "001",
                                    "numberOfDials": 5,
                                    "readingClassification": "Actual",
                                    "reading": "21768",
                                    "readingDate": "19/11/2013",
                                    "meterReadType": "DayRead",
                                    "nonCyclicToleranceFlag": "",
                                    "validationFailureCode": "",
                                    "usageType": "single",
                                    "readingType": "1801",
                                    "registerName": "Standard"
                                }
                            ],
                            "contractType": "Electricity",
                            "account": "850000367878",
                            "complexityCode": "0",
                            "contractNumber": "2076700195"
                        }
                    ]
                },
                "errors": {},
                "meta": {}
            }

+ Response 401 (application/json)

          {
              "status": "FAIL",
              "data": {},
              "errors": [
                  {
                      "code": "authorize",
                      "message": "access_denied"
                  }
              ],
              "meta": {}
          }

+ Response 400 (application/json)

          {
              "status": "FAIL",
              "data": {},
              "errors": [
                  {
                      "code": "accountNumber",
                      "message": "error.client.accountNumber.invalid"
                  }
              ],
              "meta": {}
          }

+ Response 403 (application/json)

          {
              "status": "FAIL",
              "data": {},
              "errors": [
                  {
                    "code": "account",
                    "message": "error.client.account.invalid"

                  }
              ],
              "meta": {}
          }

### Retrieve meters using MPXN [GET /meters{?meterPointId*}]
+ Parameters

  + meterPointId (string) - Meter point identifier of the meter, if available.

+ Request

    + Headers

            Authorization: Bearer {accesstoken}
            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

+ Response 200 (application/json)

            {
                "status": "SUCCESS",
                "data": {
                    "meters": [
                        {
                            "numberOfRegisters": 1,
                            "meterPointId": "1343152901",
                            "assetNumber": "000000000010376382",
                            "serialNumber": "G4A02208680401",
                            "meterType": "gas",
                            "smartMeter": false,
                            "id": "850000367878-0550013531-RzRBMDIyMDg2ODA0MDE",
                            "meterId": "3550020532",
                            "complexMeter": false,
                            "registers": [
                                {
                                    "id": "001",
                                    "numberOfDials": 5,
                                    "readingClassification": "Actual",
                                    "reading": "03287",
                                    "readingDate": "19/11/2013",
                                    "meterReadType": "DayRead",
                                    "nonCyclicToleranceFlag": "",
                                    "validationFailureCode": "",
                                    "usageType": "single",
                                    "readingType": "1801",
                                    "registerName": "Day"
                                }
                            ],
                            "contractType": "Gas",
                            "account": "850000367878",
                            "complexityCode": "0",
                            "contractNumber": "0550013531"
                        }
                    ]
                },
                "errors": {},
                "meta": {}
            }

+ Response 401 (application/json)

          {
              "status": "FAIL",
              "data": {},
              "errors": [
                  {
                      "code": "authorize",
                      "message": "invalid_request"
                  }
              ],
              "meta": {}
          }

+ Response 404 (application/json)

          {
              "status": "FAIL",
              "data": {},
              "errors": [
                  {
                       "code": "meter",
                      "message": "error.meter.notFound"

                  }
              ],
              "meta": {}
          }

### Retrieve meter using meter identifier [GET /meters/{id}]

+ Parameters

  + id (string,required) - This is the customers account number

+ Request (application/json)

  + Headers

            Authorization: Bearer accesstoken
            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

+ Response 200 (application/json)

            {
                "status": "SUCCESS",
                "data": {
                    "meter": {
                        "numberOfRegisters": 1,
                        "meterPointId": "1343152901",
                        "assetNumber": "000000000010376382",
                        "serialNumber": "G4A02208680401",
                        "meterType": "gas",
                        "smartMeter": false,
                        "id": "850000367878-0550013531-RzRBMDIyMDg2ODA0MDE",
                        "meterId": "3550020532",
                        "complexMeter": false,
                        "registers": [
                            {
                                "id": "001",
                                "numberOfDials": 5,
                                "readingClassification": "Actual",
                                "reading": "03287",
                                "readingDate": "19/11/2013",
                                "meterReadType": "DayRead",
                                "nonCyclicToleranceFlag": "",
                                "validationFailureCode": "",
                                "usageType": "single",
                                "readingType": "1801",
                                "registerName": "Day"
                            }
                        ],
                        "contractType": "Gas",
                        "account": "850000367878",
                        "complexityCode": "0",
                        "contractNumber": "0550013531"
                    }
                },
                "errors": {},
                "meta": {}
            }

+ Response 401 (application/json)

          {
              "status": "FAIL",
              "data": {},
              "errors": [
                  {
                      "code": "authorize",
                      "message": "invalid_request"
                  }
              ],
              "meta": {}
          }

+ Response 400 (application/json)

          {
              "status": "FAIL",
              "data": {},
              "errors": [
                  {
                      "code": "meterIdentifier",
                      "message": "error.client.meterIdentifier.invalid"
                  }
              ],
              "meta": {}
          }

+ Response 404 (application/json)

          {
              "status": "FAIL",
              "data": {},
              "errors": [
                  {
                      "code": "serialNumber",
                      "message": "error.client.meter.notfound"
                  }
              ],
              "meta": {}
          }

### Validate Meter read [GET /meters/{id}/reading/validation{?registerNumber,reading}]

+ Parameters

  + id (string,required) - Concatenated account number, contract number and encoded serial number of the meter which the reading is taken, Should not be null or empty.
  + registerNumber (string) - Register number for which the reading is taken, Should not be null or empty
  + reading (string) - Should not be null or empty. Should be number and max 6 digits

+ Request (application/json)

  + Headers

            Authorization: Bearer accesstoken
            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

+ Response 200 (application/json)

          {
              "status": "SUCCESS",
              "data": {
                  "isValidationFailure": false,
                  "isOutOfTolerantReading": false
              },
              "errors": [],
              "meta": {}
          }

+ Response 401 (application/json)

          {
              "status": "FAIL",
              "data": {},
              "errors": [
                  {
                      "code": "authorize",
                      "message": "invalid_request"
                  }
              ],
              "meta": {}
          }

+ Response 403 (application/json)

          {
              "status": "FAIL",
              "data": {},
              "errors": [
                  {
                    "code": "account",
                    "message": "error.client.account.invalid"
                  }
              ],
              "meta": {}
          }

+ Response 404 (application/json)

          {
              "status": "FAIL",
              "data": {},
              "errors": [
                  {
                      "code": "register",
                      "message": "error.client.register.notfound"
                  }
              ],
              "meta": {}
          }

+ Response 400 (application/json)

          {
              "status": "FAIL",
              "data": {},
              "errors": [
                  {
                      "code": "registerNumber",
                      "message": "error.client.registerNumber.blank"
                  }
              ],
              "meta": {}
          }

+ Response 500 (application/json)

          {
              "status": "FAIL",
              "data": {},
              "errors": [
                  {
                      "code": "validatemeter",
                      "message": "error.client.validatemeter.no.response"
                  }
              ],
              "meta": {}
          }

### Check Meter ownership [POST /meters/ownership-check]

+ Request (application/json)

  + Headers

            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

  + Body

            {
                "meterPointId": "201234567890"
            }

+ Response 200 (application/json)

            {
                "status": "SUCCESS",
                "data": {
                    "bgOwned": true,
                    "PodExtUi": "201234567890"
                },
                "errors": {},
                "meta": {}
            }

+ Response 400 (application/json)

          {
              "status": "FAIL",
              "data": {},
              "errors": [
                  {
                      "code": "meterPointId",
                      "message": "error.client.meterPointId.blank"
                  }
              ],
              "meta": {}
          }

+ Response 404 (application/json)

          {
              "status": "ERROR",
              "data": {},
              "errors": [
                  {
                      "code": "meter",
                      "message": "error.meter.notFound"
                  }
              ],
              "meta": {}
          }

+ Response 404 (application/json)

          {
              "status": "ERROR",
              "data": {},
              "errors": [
                  {
                      "code": "meter",
                      "message": "error.meter.notFound"
                  }
              ],
              "meta": {}
          }
