## Group Bills
Simulated bills API allows you to create simulated bill for single/dual/joint invoice accounts by submitting the meter reading. Responses from this API will be returned in JSON format only.

## Simulated Bills Collection [/simulated-bills]
Simulated bill as a resource represents following information

+ id (string,Returned always) - It is a concatenated value of gas and electricity invoice numbers, separated by (-). For joint invoice account, it will have the joint invoice number.
+ gasBalance (string, Returned always) - Balance amount in gas account.
+ gasInvoiceNumber (string, Returned always) - Invoice number for gas account.
+ electricityBalance (string, Returned always) - Balance amount in electricity account.
+ electricityInvoiceNumber (string, Returned always) - Invoice number for electricity account.
+ jointBalance (string, Returned always) - Balance amount in joint invoice account.
+ balanceBroughtForward (string, Returned always) - Balance amount brought forward from previous bill.
+ discountAndVat (string, Returned always) - Discount and Vat for the accounts.

### Create Simulated bill [POST /simulated-bills]
####Meta - Meter

All the meters associated to the account can be send in request body Meter is represented by the below properties

+ id (string, Mandatory) - It is a concatenated value of account number, contract number and encoded serial number of the meter separated by (-), as retrieved in Meters API.
+ registers (collection of Register, Mandatory) - All the registers available for the meter.

####Meta - Register

Register is represented by the below properties

+ id (string, Mandatory) - Register identifier retrieved from Meters API, concatenated value of account number, contract number, meter serial number and register number separated by '-'
+ readingDate (string, Mandatory) - Date in which the reading is taken in dd/MM/yyyy format.
+ reading (string, Mandatory) - Reading from the register, should be numeric with maximum 6 digits.

+ Request (application/json)

    + Headers

            Authorization: Bearer access-token
			cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526
			
	+ Body
	
			{
				"meta": {
					"meters": [
						{
							"id": "850000367878-0550013531-RzRBMDIyMDg2ODA0MDE",
							"registers": [
								{
									"id": "850000367878-0550013531-RzRBMDIyMDg2ODA0MDE-001",
									"readingDate": "05/08/2015",
									"reading": "00120"
								},
								{
									"id": "850000367878-0550013531-RzRBMDIyMDg2ODA0MDE-002",
									"readingDate": "05/08/2015",
									"reading": "01120"
								}
							]
						}
					]
				}
			}
			
+ Response 200 (application/json)

			{
				"status": "SUCCESS",
				"data": {
					"simulated-bill": {
						"id": "123007394603-128007401016",
						"gasBalance": "502.15",
						"gasInvoiceNumber": "123007394603",
						"electricityBalance": "27.88",
						"electricityInvoiceNumber": "128007401016",
						"jointBalance": "0.00",
						"balanceBroughtForward": "0.00",
						"discountAndVat": "0.00"
					}
				},
				"errors": {},
				"meta": {}
			}

+ Response 401 (application/json)

			{
				"status": "FAIL",
				"data": {},
				"errors": [
					{
						"code": "authorize",
						"message": "access_denied"
					}
				],
				"meta": {}
			}

+ Response 400 (application/json)

			{
				"status": "FAIL",
				"data": {},
				"errors": [
					{
						"code": "meterIdentifier",
						"message": "error.client.meterIdentifier.invalid"
					}
				],
				"meta": {}
			}

+ Response 400 (application/json)			

			{
				"status": "FAIL",
				"data": {},
				"errors": [
					{
						"code": "accountNumber",
						"message": "error.client.accountNumber.invalid"
					}
				],
				"meta": {}
			}

+ Response 401 (application/json)

			{
				"status": "FAIL",
				"data": {},
				"errors": [
					{
						"code": "accountNumber",
						"message": "error.client.accountNumber.invalid"
					}
				],
				"meta": {}
			}

+ Response 400 (application/json)

			{
				"status": "FAIL",
				"data": {},
				"errors": [
					{
						"code": "meta",
						"message": "error.meterInfo.invalid"
					}
				],
				"meta": {}
			}

+ Response 500 (application/json)

			{
				"status": "ERROR",
				"data": {},
				"errors": [
					{
						"code": "system",
						"message": "error.system.unexpected.error"
					}
				],
				"meta": {}
			}
			
