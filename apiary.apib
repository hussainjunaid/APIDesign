FORMAT: 1A
HOST: https://193.67.163.23/api/secure

# britishgas

## Group Accounts
Accounts API allows you to list / view all the accounts of the logged in customer. This includes energy accounts, services accounts, multi premise landlord accounts and sales orders of OAM registered and wafer thin profile customers. Responses from this API will be retuned in JSON format only.

## Accounts Collection [/accounts]
### Retrieve a specific Account [GET /accounts/{accountNumber}]
+ Parameters

    + accountNumber (number) ...This is the customers account number

+ Request

    + Headers

            Authorization: Bearer accesstoken
            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

+ Response 200 (application/json)

        {
            "status": "SUCCESS",
            "data": {
                "account": {
                    "id": "850034235409",
                    "multiPremiseLandlord": false,
                    "status": "Open",
                    "subType": "Electricity",
                    "responsibilityType": "Legal Payer",
                    "supplyAddress": {
                        "MPRN": null,
                        "postalTown": "Salford",
                        "houseName": "",
                        "address": "53b, Garstang Road North, Salford, Lancashire, WS3 3ER",
                        "county": "LANCASHIRE",
                        "MPAN": null,
                        "houseNumber": "53B",
                        "postcode": "WS3 3ER",
                        "addressLine2": "",
                        "addressLine1": "GARSTANG ROAD NORTH",
                        "flatNumber": null
                    },
                    "type": "Energy",
                    "holderName": "Mr Morita"
                }
            },
            "errors": [],
            "meta": {}
        }

+ Response 401 (application/json)

        {
            "status": "FAIL",
            "data": {},
            "errors": {
                "authorize": "access_denied"
            },
            "meta": {}
        }

+ Response 404 (application/json)

        {
            "status": "ERROR",
            "data": {},
            "errors": {
                "accountNumber": "error.client.account.notfound"
            },
            "meta": {}
        }

### Retrieve all Accounts [GET /accounts]
+ Request

    + Headers

            Authorization: Bearer accesstoken
            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

+ Response 200 (application/json)

        {
            "status": "SUCCESS",
            "data": {
                "accounts": [
                    {
                        "id": "850034235409",
                        "multiPremiseLandlord": false,
                        "status": "Open",
                        "subType": "Electricity",
                        "responsibilityType": "Legal Payer",
                        "supplyAddress": {
                            "MPRN": null,
                            "postalTown": "Salford",
                            "houseName": "",
                            "address": "53b, Garstang Road North, Salford, Lancashire, WS3 3ER",
                            "county": "LANCASHIRE",
                            "MPAN": null,
                            "houseNumber": "53B",
                            "postcode": "WS3 3ER",
                            "addressLine2": "",
                            "addressLine1": "GARSTANG ROAD NORTH",
                            "flatNumber": null
                        },
                        "type": "Energy",
                        "holderName": "Mr Morita"
                    },
                    {
                        "id": "850034336151",
                        "multiPremiseLandlord": false,
                        "status": "Open",
                        "subType": "Gas",
                        "responsibilityType": "Legal Payer",
                        "supplyAddress": {
                            "MPRN": null,
                            "postalTown": "Salford",
                            "houseName": "",
                            "address": "53b, Garstang Road North, Salford, Lancashire, WS3 3ER",
                            "county": "LANCASHIRE",
                            "MPAN": null,
                            "houseNumber": "53B",
                            "postcode": "WS3 3ER",
                            "addressLine2": "",
                            "addressLine1": "GARSTANG ROAD NORTH",
                            "flatNumber": null
                        },
                        "type": "Energy",
                        "holderName": "Mr Morita"
                    }
                ]
            },
            "errors": [],
            "meta": {}
        }

+ Response 401 (application/json)

        {
            "status": "FAIL",
            "data": {},
            "errors": {
                "authorize": "access_denied"
            },
            "meta": {}
        }
## Energy Accounts [/energy-accounts]
Energy Accounts API allows you to list / view all the energy accounts of the logged in customer. Responses from this API will be retuned in JSON format only
Energy Account as a resource represents following information

+ id - (string) - Account number of the account is considered as the unique identifier
+ holderName - (string) - Name of the account holder if available
+ status - (string) - Status of the account if available. Possible values are open, pending, closed, submitted, cancelled, complete, incomplete, locked, deactive, inprogress, new, processed, wafer and unknown
+ type - (string) - Type of the account, this will be always Energy.
+ subType - (string) - Subtype of the account, this will be Electricity, Gas or Dual
+ responsibilityType - (string) - Responsibility type of the account if available.
+ balance - (string)  - Balance of the account if available.
+ balanceType - (string) - Type of account balance if available, it can be either "in credit" or "in debit".
+ tariff - (string) -  Tariff id associated to the account if available.
+ paymentType - (string) -  Payment type description of the account if available.
+ contractEndDate - (string) - End date of contract associated to the account if available, in dd/MM/yyyy format 
+ supplyAddress - (Address) -  Address of the customer if available. MPAN and MPRN is null, as these values are not available for the address in backend.
+ jointInvoiceDetails - (object) -  Holds details of the merge related information only if the account was merged previously. 
+ registeredPaperlessBillingOn - (string) - Represents the date when Paperless billing was opted in for this account. 
+ paperlessBilling - (boolean) - true if account is opted into paperless billing, false otherwise. 
+ jointInvoiced - (boolean) - true if the account is a Joint Invoiced account. false otherwise.
+ nextBillDate - (string) - Returned always  - Next bill date (in UTC format) only when meter read window is open. This value will be null, if the meter read window is closed.
+ numberOfEstimatedBills - (int) - Returned always - The total number of estimated bills so far for the account when the meter read window is open, else it will be zero.
 
### Retrieve all energy accounts [GET /energy-accounts]
+ Request

    + Headers

            Authorization: Bearer accesstoken
            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526
            
+ Response 200 (application/json)

        {
            "status": "SUCCESS",
            "data": {
                "energyAccounts": [
                    {
                        "jointInvoiceDetails": {
                            "mergeDate": null,
                            "mergeType": null,
                            "mergedAccountNumber": null
                        },
                        "registeredPaperlessBillingOn": "04/02/2011",
                        "status": "open",
                        "paymentType": "Direct Debit",
                        "responsibilityType": "Legal Payer",
                        "paperlessBilling": true,
                        "type": "Energy",
                        "holderName": "Mr Morita",
                        "id": "850034235409",
                        "contractEndDate": null,
                        "balance": 111.47,
                        "subType": "Electricity",
                        "tariff": "fix-and-fall-june-2016",
                        "supplyAddress": {
                            "MPRN": null,
                            "postalTown": "Salford",
                            "houseName": "",
                            "address": "53b, Garstang Road North, Salford, Lancashire, WS3 3ER",
                            "county": "LANCASHIRE",
                            "MPAN": null,
                            "houseNumber": "53B",
                            "postcode": "WS3 3ER",
                            "addressLine2": "",
                            "addressLine1": "GARSTANG ROAD NORTH",
                            "flatNumber": null
                        },
                        "balanceType": "in credit",
                        "jointInvoiced": true,
                        "myEnergyEligible": false,
                        "nextBillDate": "2015-10-12T00:00:00+0100",
                        "numberOfEstimatedBills": 1
                    },
                    {
                        "jointInvoiceDetails": {
                            "mergeDate": null,
                            "mergeType": null,
                            "mergedAccountNumber": null
                        },
                        "registeredPaperlessBillingOn": "04/02/2011",
                        "status": "open",
                        "paymentType": "Direct Debit",
                        "responsibilityType": "Legal Payer",
                        "paperlessBilling": true,
                        "type": "Energy",
                        "holderName": "Mr Morita",
                        "id": "850034336151",
                        "contractEndDate": null,
                        "balance": 140.52,
                        "subType": "Gas",
                        "tariff": "fix-and-fall-june-2016",
                        "supplyAddress": {
                            "MPRN": null,
                            "postalTown": "Salford",
                            "houseName": "",
                            "address": "53b, Garstang Road North, Salford, Lancashire, WS3 3ER",
                            "county": "LANCASHIRE",
                            "MPAN": null,
                            "houseNumber": "53B",
                            "postcode": "WS3 3ER",
                            "addressLine2": "",
                            "addressLine1": "GARSTANG ROAD NORTH",
                            "flatNumber": null
                        },
                        "balanceType": "in credit",
                        "jointInvoiced": true,
                        "myEnergyEligible": false,
                        "nextBillDate": null,
                        "numberOfEstimatedBills": 0
                    }
                ]
            },
            "errors": [],
            "meta": {}
        }
        
+ Response 401 (application/json)

        {
            "status": "FAIL",
            "data": {},
            "errors": [
                {
                    "code": "authorize",
                    "message": "access_denied"
                }
            ],
            "meta": {}
        }


### Retrieve a specific Account [GET /energy-accounts{?accountNumber*}]
+ Parameters

    + accountNumber (number) ...This is the customers account number
        
+ Request

    + Headers

            Authorization: Bearer accesstoken
            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

+ Response 200 (application/json)

        {
            "status": "SUCCESS",
            "data": {
                "energyAccounts": [
                    {
                        "jointInvoiceDetails": {
                            "mergeDate": null,
                            "mergeType": null,
                            "mergedAccountNumber": null
                        },
                        "registeredPaperlessBillingOn": "04/02/2011",
                        "status": "open",
                        "paymentType": "Direct Debit",
                        "responsibilityType": "Legal Payer",
                        "paperlessBilling": true,
                        "type": "Energy",
                        "holderName": "Mr Morita",
                        "id": "850034235409",
                        "contractEndDate": null,
                        "balance": 111.47,
                        "subType": "Electricity",
                        "tariff": "fix-and-fall-june-2016",
                        "supplyAddress": {
                            "MPRN": null,
                            "postalTown": "Salford",
                            "houseName": "",
                            "address": "53b, Garstang Road North, Salford, Lancashire, WS3 3ER",
                            "county": "LANCASHIRE",
                            "MPAN": null,
                            "houseNumber": "53B",
                            "postcode": "WS3 3ER",
                            "addressLine2": "",
                            "addressLine1": "GARSTANG ROAD NORTH",
                            "flatNumber": null
                        },
                        "balanceType": "in credit",
                        "jointInvoiced": true,
                        "myEnergyEligible": false,
                        "nextBillDate": "2015-10-12T00:00:00+0100",
                        "numberOfEstimatedBills": 1
                    },
                    {
                        "jointInvoiceDetails": {
                            "mergeDate": null,
                            "mergeType": null,
                            "mergedAccountNumber": null
                        },
                        "registeredPaperlessBillingOn": "04/02/2011",
                        "status": "open",
                        "paymentType": "Direct Debit",
                        "responsibilityType": "Legal Payer",
                        "paperlessBilling": true,
                        "type": "Energy",
                        "holderName": "Mr Morita",
                        "id": "850034336151",
                        "contractEndDate": null,
                        "balance": 140.52,
                        "subType": "Gas",
                        "tariff": "fix-and-fall-june-2016",
                        "supplyAddress": {
                            "MPRN": null,
                            "postalTown": "Salford",
                            "houseName": "",
                            "address": "53b, Garstang Road North, Salford, Lancashire, WS3 3ER",
                            "county": "LANCASHIRE",
                            "MPAN": null,
                            "houseNumber": "53B",
                            "postcode": "WS3 3ER",
                            "addressLine2": "",
                            "addressLine1": "GARSTANG ROAD NORTH",
                            "flatNumber": null
                        },
                        "balanceType": "in credit",
                        "jointInvoiced": true,
                        
                    }
                ]
            },
            "errors": [],
            "meta": {}
        }

+ Response 401 (application/json)

        {
            "status": "FAIL",
            "data": {},
            "errors": [
                {
                    "code": "authorize",
                    "message": "access_denied"
                }
            ],
            "meta": {}
        }
        
+ Response 404 (application/json)

        {
            "status": "FAIL",
            "data": {},
            "errors": [
                {
                    "code": "authorize",
                    "message": "access_denied"
                }
            ],
            "meta": {}
        }

### Modify Energy Account [PUT /energy-accounts/{accountNumber}]
+ Parameters

    + accountNumber (number) ...This is the customers account number
        
+ Request

    + Headers

            Authorization: Bearer accesstoken
            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

+ Response 200 (application/json)

            {
                "energyAccount": {
                    "jointInvoiceDetails": {
                        "mergeDate": null,
                        "mergeType": null,
                        "mergedAccountNumber": null
                    },
                    "registeredPaperlessBillingOn": "04/02/2011",
                    "status": "open",
                    "paymentType": "Direct Debit",
                    "responsibilityType": "Legal Payer",
                    "paperlessBilling": true,
                    "type": "Energy",
                    "holderName": "Mr Morita",
                    "id": "850034235409",
                    "contractEndDate": null,
                    "balance": 111.47,
                    "subType": "Electricity",
                    "tariff": "fix-and-fall-june-2016",
                    "supplyAddress": {
                        "MPRN": null,
                        "postalTown": "Salford",
                        "houseName": "",
                        "address": "53b, Garstang Road North, Salford, Lancashire, WS3 3ER",
                        "county": "LANCASHIRE",
                        "MPAN": null,
                        "houseNumber": "53B",
                        "postcode": "WS3 3ER",
                        "addressLine2": "",
                        "addressLine1": "GARSTANG ROAD NORTH",
                        "flatNumber": null
                    },
                    "balanceType": "in credit",
                    "jointInvoiced": true,
                    "myEnergyEligible": true,
                    "nextBillDate": "2015-10-12T00:00:00+0100",
                    "numberOfEstimatedBills": 1
                },
                "meta": {
                    "orderPayload": "eXJrazFFaXlKcC9qTlI3NWVSTEZzWkl0YWdOS0pSRTdXR2VscEErOTYxTkx3WFFGZXUwWURhMmhvbW1SaEUvcXQxTUZjbEtLL0JKbAp2VVIvV3k0MFVGNzc4TVdjUmpGREtqeS9nMzZUT0JCQTJPR3E0V05HcGRZZThGSU5EREc2NktNcXBrNnJmWEpUYUgxT2Z5RmVPenVSCmFrUVNoUTdUcVE2WVRTT2hKbUZtNVZwSEtFYjAyTWNHUXpldTFsWmZhUjczZDVLSTFIWFBGUnJNZWpKR1RZY25FZFEwNlpjT1c2OEwKTkRvU3MzYndxRmtiS0F5YjVkQ0krNFhFdnpUaktwTzN1RzJjTU42Q2RubUdlTUlvMXc9PQ"
                }
            }
            
+ Response 401 (application/json)

        {
            "status": "FAIL",
            "data": {},
            "errors": [
                {
                    "code": "authorize",
                    "message": "access_denied"
                }
            ],
            "meta": {}
        }
        
+ Response 404 (application/json)

        {
            "status": "FAIL",
            "data": {},
            "errors": [
                {
                    "code": "orderPayload",
                    "message": "error.client.orderPayload.invalid"
                }
            ],
            "meta": {}
        }

## Service Accounts [/service-accounts]
Service Accounts API allows you to list / view all the service accounts of the logged in customer. Responses from this API will be retuned in JSON format only.
Service Account as a resource represents following information

+ id - (string) - `Returned always`. Account number of the account is considered as the unique identifier
+ customerId - (string) - `Returned always`. This is the legacy customer identification applicable for certain accounts.
+ premiseId - (string) - `Returned always`. This is the legacy premise identification applicable for certain accounts.
+ holderName - (string) - `Returned always`. Name of the account holder if available.
+ status - (string) - `Returned always`. Status of the account if available. Possible values are `open`, `pending`, `closed`, `submitted`, `cancelled`, `complete`, `incomplete`, `locked`, `deactive`, `inprogress`, `new`, `processed`, `wafer` and `unknown`
+ type - (string) - `Returned always`. Type of the account, this will be always Services.
+ subType - (string) - `Returned always`. Subtype of the account, this will be Home Services or Security.
+ responsibilityType - (string) - `Returned always`. Responsibility type of the account if available.
+ legacyAccountNumber - (string) - `Returned always`. Legacy Account Number of the account if available.
+ contractEndDate - (string) - `Returned always`. End date of contract associated to the account if available, in dd/MM/yyyy format
+ nextServiceDate - (string) - `Returned always`. Next service visit date if available, in dd/MM/yyyy format
+ multiPremiseLandlord- (boolean) - `Returned always`. Indicates the account as a multi premise landlord account, if the value is true
+ bulkAccount - (boolean) - `Returned always`. Indicates the account as a bulk account, if the value is true
+ landlord - (boolean) - `Returned always`. Indicates the account as a landlord account, if the value is true
+ gasSafetyCertificateAvailable - (boolean) - `Returned always`. Indicates that the account holds a valid Gas Safety Certificate, if the value is true
+ eligibleForFirstVisit - (boolean) - `Returned always`. Indicates that first visit can be booked for this account, if the value is true
+ eligibleForInterimBreakdown - (boolean) - `Returned always`. Indicates that interim breakdown visit can be booked for this account, if the value is true
+ eligibleForAnnualServiceVisit - (boolean) - `Returned always`. Indicates that annual service visit can be booked for this account, if the value is true
+ eligibleForUpsell - (boolean) - `Returned always`. Indicates that the account can be upgraded, if the value is true
+ supplyAddress - (Address) - `Returned always`. Address of the customer if available. MPAN and MPRN is null, as these values are not available for the address in backend.

### Retrieve all service accounts [GET /service-accounts]
+ Request

    + Headers

            Authorization: Bearer accesstoken
            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526
            
+ Response 200 (application/json)

            {
                "status": "SUCCESS",
                "data": {
                    "serviceAccounts": [
                        {
                            "landlord": false,
                            "legacyAccountNumber": "22208170L277092",
                            "status": "open",
                            "eligibleForAnnualServiceVisit": true,
                            "eligibleForUpsell": true,
                            "responsibilityType": "Legal Payer",
                            "type": "Services",
                            "holderName": "Mr Thomas Red",
                            "id": "911000155091",
                            "contractEndDate": "10/12/2015",
                            "gasSafetyCertificateAvailable": false,
                            "bulkAccount": false,
                            "customerId": "22208170",
                            "multiPremiseLandlord": false,
                            "subType": "Home Services",
                            "supplyAddress": {
                                "MPRN": null,
                                "postalTown": "Lightwater",
                                "houseName": null,
                                "address": "20, Springfield, Lightwater, Surrey, GU18 5XP",
                                "county": "SURREY",
                                "MPAN": null,
                                "houseNumber": "20",
                                "postcode": "GU18 5XP",
                                "addressLine2": null,
                                "addressLine1": "Springfield",
                                "flatNumber": null
                            },
                            "premiseId": "L277092",
                            "eligibleForInterimBreakdown": true,
                            "eligibleForFirstVisit": true
                        }
                    ]
                },
                "errors": [],
                "meta": {}
            }
            
+ Response 401 (application/json)

            {
                "status": "FAIL",
                "data": {},
                "errors": {
                    "authorize": "invalid_request"
                },
                "meta": {}
            }

### Retrieve a specific service account [GET /service-accounts/{accountNumber}]
+ Parameters

    + accountNumber (number) ...This is the customers account number
        
+ Request

    + Headers

            Authorization: Bearer accesstoken
            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

+ Response 200 (application/json)

            {
                "status": "SUCCESS",
                "data": {
                    "serviceAccount": {
                        "landlord": false,
                        "legacyAccountNumber": "22208170L277092",
                        "status": "open",
                        "eligibleForAnnualServiceVisit": true,
                        "eligibleForUpsell": true,
                        "responsibilityType": "Legal Payer",
                        "type": "Services",
                        "holderName": "Mr Thomas Red",
                        "id": "911000155091",
                        "contractEndDate": "10/12/2015",
                        "gasSafetyCertificateAvailable": false,
                        "bulkAccount": false,
                        "customerId": "22208170",
                        "multiPremiseLandlord": false,
                        "subType": "Home Services",
                        "supplyAddress": {
                            "MPRN": null,
                            "postalTown": "Lightwater",
                            "houseName": null,
                            "address": "20, Springfield, Lightwater, Surrey, GU18 5XP",
                            "county": "SURREY",
                            "MPAN": null,
                            "houseNumber": "20",
                            "postcode": "GU18 5XP",
                            "addressLine2": null,
                            "addressLine1": "Springfield",
                            "flatNumber": null
                        },
                        "premiseId": "L277092",
                        "eligibleForInterimBreakdown": true,
                        "eligibleForFirstVisit": true
                    }
                },
                "errors": [],
                "meta": {}
            }

+ Response 401 (application/json)

            {
                "status": "FAIL",
                "data": {},
                "errors": {
                    "authorize": "invalid_request"
                },
                "meta": {}
            }

+ Response 404 (application/json)

            {
                "status": "ERROR",
                "data": {},
                "errors": {
                    "accountNumber": "error.client.account.notfound"
                },
                "meta": {}
            }

## Group Addresses
Addresses API allows you to list / view addresses for a given postcode using `QAS`. Responses from this API will be retuned in JSON format only.

## Addresses Collection [/addresses]
### Retrieve all addresses [GET /addresses{?postcode,house_no, validateServiceArea}]
+ Parameters

    + postcode (string) ...A valid UK postcode
    + house_no (string, optional) ...House number to restrict the search for
    + validateServiceArea (Boolean, optional)

+ Request (application/json)

    + Headers

            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

+ Response 200 (application/json)

        {
            "status": "SUCCESS",
            "data": {
                "addresses": [
                    {
                        "MPRN": null,
                        "postalTown": "STAINES-UPON-THAMES",
                        "houseName": "Linden Place",
                        "address": "Flat 10, Linden Place, Fairfield Avenue, STAINES-UPON-THAMES, Middlesex, TW18 4AF, United Kingdom",
                        "county": "Middlesex",
                        "MPAN": "2000003714247",
                        "houseNumber": null,
                        "postcode": "TW18 4AF",
                        "addressLine2": null,
                        "addressLine1": "Fairfield Avenue",
                        "flatNumber": "Flat 10"
                    }
                ]
            },
            "errors": {},
            "meta": {}
        }

+ Response 400 (application/json)

        {
            "status": "FAIL",
            "data": {},
            "errors": {
                "postcode": "error.client.postcode.invalid"
            },
            "meta": {}
        }

+ Response 400 (application/json)

        {
            "status": "ERROR",
            "data": {},
            "errors": {
                "code": "system",
                "message": "error.postcode.notInBGArea"
            },
            "meta": {}
        }

### Annonymous Supply Check  [GET /addresses/supply-check{?flatNumber,houseNumber,houseName,addressLine1,addressLine2,postalTown,county,postCode}]
+ Parameters

    + flatNumber (string, optional) ...flat number of the selected address, if available.
    + houseNumber (string, optional) ...house number of the selected address, if available.
    + houseName (string, optional) ...house name of the selected address, if available. Atleast one of flat number, house number and house name need to be available for identifying a premise
    + addressLine1 (string, optional) ...street of the selected address, if available.
    + addressLine2 (string, optional) ...locality of the selected address, if available.
    + postalTown (string) ...town or city of the selected address, if available.
    + county (string, optional) ...county of the selected address, if available.
    + postCode (string, optional) ...post code of the selected address, if available.

+ Request (application/json)

    + Headers

            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526


+ Response 200 (application/json)

        {
            "status": "SUCCESS",
            "data": {
                        "supplyCheckCode": "00"
                    },
            "errors": [],
            "meta": {}
        }

+ Response 200 (application/json)

        {
            "status": "SUCCESS",
            "data": {
                        "supplyCheckCode": "01"
                    },
            "errors": [],
            "meta": {}
        }

+ Response 200 (application/json)

        {
            "status": "SUCCESS",
            "data": {
                        "supplyCheckCode": "02"
                    },
            "errors": [],
            "meta": {}
        }

+ Response 200 (application/json)

        {
            "status": "SUCCESS",
            "data": {
                        "supplyCheckCode": "03"
                    },
            "errors": [],
            "meta": {}
        }

+ Response 200 (application/json)

        {
            "status": "SUCCESS",
            "data": {
                        "supplyCheckCode": "04"
                    },
            "errors": [],
            "meta": {}
        }

+ Response 404 (application/json)

        {
            "status": "FAIL",
            "data": {},
            "errors": [
                {
                    "code": "checkavailability",
                    "message": "error.client.checkavailability.no.supply"
                }
            ],
            "meta": {}
        }

+ Response 400 (application/json)

        {
            "status": "ERROR",
            "data": {},
            "errors": {
                "postalTown": "error.client.postalTown.blank"
            },
            "meta": {}
        }

+ Response 500 (application/json)

        {
            "status": "ERROR",
            "data": {},
            "errors": {
                "checkavailability": "error.client.checkavailability.no.response"
            },
            "meta": {}
        }

# Logged In supply Check [GET /address/supply-check?houseNumber=1&postCode=SL11AB]

+ Request (application/json)

    + Headers

            Authorization: Bearer accesstoken
            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

+ Response 200 (application/json)

        {
            "status": "SUCCESS",
            "data": {
                "supplyEnergyProducts": true,
                "supplyElectricityProduct": true,
                "supplyServiceProducts": true,
                "supplyGasProduct": true
            },
            "errors": {},
            "meta": {}
        }

## Group Customers
Customers API allows you to list details of current customer represented at Online. Responses from this API will be returned in JSON format only. In order to retrieve information about current customer, client should have logged into to online and supply the access token along with the request.

Customer as a resource identifies current logged in user.

+ id - string
+ title - string
+ firstName - string
+ surname - string
+ dateOfBirth - string
+ primaryTelephoneNumber - Telephone number
+ telephoneNumbers - Array of Telephone numbers
+ correspondeceAddress - Address

Telephone Number
+ number - string
+ type - string

## Customers Collection [/customers]

### Retrieve customers [GET]
+ Request

    + Headers

            Authorization: Bearer accesstoken
            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

+ Response 200 (application/json)

        {
            "status": "SUCCESS",
            "data": {
                "customers": [
                    {
                        "id": "OVh4NnpZUEdNNUxwZTBWRDI5czIxZz09",
                        "title": "Mr",
                        "firstName": "Pentwazz Stavea",
                        "surname": "Kenj",
                        "dateOfBirth": "17/04/1975",
                        "primaryTelephoneNumber": null,
                        "telephoneNumbers": [],
                        "correspondenceAddress": {
                            "address": "67, Beresford Avenue, Surbiton, Surrey, KT5 9LH",
                            "houseNumber": "67",
                            "flatNumber": null,
                            "houseName": null,
                            "addressLine1": "Beresford Avenue",
                            "addressLine2": null,
                            "postalTown": "Surbiton",
                            "county": "SURREY",
                            "postcode": "KT5 9LH",
                            "MPAN": null,
                            "MPRN": null
                        }
                    }
                ]
            },
            "errors": [],
            "meta": {}
        }

+ Response 401 (application/json)

        {
            "status": "FAIL",
            "data": {},
            "errors": [
                {
                    "code": "authorize",
                    "message": "access_denied"
                }
            ],
            "meta": {}
        }

## Customers Match by account info [/customers/match-by-account-info]
This is a controller service which allows to find out whether a customer with matching account number, home care number or sales order number, is available in backend system. The request body of this post must be a JSON object with properties listed below.

+ title
+ firstName
+ surname
+ email
+ postcode
+ customerReference

### Customer match by account info [POST]

+ Request (application/json)

    + Headers

            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

    + Body

            {
                "title": "Mr",
                "firstName": "Pentwazz Stavea",
                "surname": "Kenj",
                "customerReference": "851001347680",
                "email": "Haneesa.Abdulhakkim@bgdigitaltest.co.uk"
            }


+ Response 200 (application/json)

            {
                  "status": "SUCCESS",
                  "data": {
                    "customerMatch": {
                      "matchToken": "6e16063a-8a89-5d1a-b9cb-72d14c4c7579",
                      "status": "0xRM91"
                    }
                  },
                  "errors": [],
                  "meta": {}
            }

+ Response 400 (application/json)

        {
            "status": "FAIL",
            "data": {},
            "errors": [
                {
                    "code": "surname",
                    "message": "error.client.surname.blank"
                }
            ],
            "meta": {}
        }


## Customers Match by bank info [/customers/match-by-bank-info]

This is a controller service which allows to find out whether a customer with matching postcode and direct debit bank account number, is available in backend system. The request body of this post must be a JSON object identified with customer. The parameters of the JSON is as follows:

+ title - string
+ firstName - string
+ surname - string
+ email - string
+ postcode - string
+ directDebitNumber - string

### Match by bank info [POST]

+ Request (application/json)

    + Headers

            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

    + Body

            {
                "title": "Mr",
                "firstName": "Pentwazz Stavea",
                "surname": "Kenj",
                "postcode": "TW18 4ND",
                "email": "Haneesa.Abdulhakkim@bgdigitaltest.co.uk",
                "directDebitNumber": "1234"
            }

+ Response 200 (application/json)

            {
                  "status": "SUCCESS",
                  "data": {
                    "customerMatch": {
                      "matchToken": null,
                      "status": "0xTXE0"
                    }
                  },
                  "errors": [],
                  "meta": {}
            }

+ Response 400 (application/json)

            {
                "status": "FAIL",
                "data": {},
                "errors": [
                    {
                        "code": "surname",
                        "message": "error.client.surname.blank"
                    }
                ],
                "meta": {}
            }

+ Response 404 (application/json)

        {
            "status": "FAIL",
            "data": {},
            "errors": [
                {
                    "code": "error.email.exists",
                    "message": "Customer profile registered with given email address."
                }
            ],
            "meta": {}
        }

## Customers Match by postcode [/customers/match-by-postcode]

This is a controller service which allows to find out whether a customer with matching postcode and email address, is available in backend system. The request body of this post must be a JSON object identified with customer. The parameters of the JSON is as follows:

+ title - string
+ firstName - string
+ surname - string
+ email - string
+ postcode - string


### Match by bank info [POST]

+ Request (application/json)

    + Headers

            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

    + Body

            {
                "title": "Mr",
                "firstName": "Pentwazz Stavea",
                "surname": "Kenj",
                "postcode": "TW18 4ND",
                "email": "Haneesa.Abdulhakkim@bgdigitaltest.co.uk"
            }

+ Response 200 (application/json)

            {
                  "status": "SUCCESS",
                  "data": {
                    "customerMatch": {
                      "matchToken": null,
                      "status": "0xTXE0"
                    }
                  },
                  "errors": [],
                  "meta": {}
            }

+ Response 400 (application/json)

            {
                "status": "FAIL",
                "data": {},
                "errors": [
                    {
                        "code": "surname",
                        "message": "error.client.surname.blank"
                    }
                ],
                "meta": {}
            }

## Customers Account check [/customers/account-check]

This is a controller service allows you to identify what type of accounts customer holds based on the match done previously. As a controller it expects the input in the form of JSON object with an attribute matchToken. Request / response are as follows.

### Account check [POST]

+ Request (application/json)

    + Headers

            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

    + Body

            {
                "matchToken": "0f35b369-ee56-52d8-911d-16fc6d73e70b"
            }

+ Response 200 (application/json)

            {
                  "status": "SUCCESS",
                  "data": {
                    "accountCheck": {
                      "energyAccountsAvailable": true,
                      "serviceAccountsAvailable": true
                    }
                  },
                  "errors": [],
                  "meta": {}
            }

+ Response 403 (application/json)

            {
                "status": "FAIL",
                "data": {},
                "errors": [
                    {
                        "code": "matchToken",
                        "message": "error.client.matchToken.invalid"
                    }
                ],
                "meta": {}
            }


## Group UserInfo

Resources related to UserInfo

## UserInfo [/userinfo]
UserInfo resource represents the online profile details of the customer. A UserInfo object has the following attributes:

+ id - represents email address
+ title
+ firstName
+ surname
+ registeredOn
+ type - thin or oam
+ status
+ brand - BG or Sainsburys

### Retrieve logged in UserInfo details [GET]
+ Request (application/json)

    + Headers

            Authorization: Bearer accesstoken
            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

+ Response 200 (application/json)

            {
            "status": "SUCCESS",
            "data": {
                "userinfo": [
                    {
                        "id": "junaid.hussain@centrica.com",
                        "title": "Mr",
                        "firstName": "Junaid",
                        "surname": "Hussain",
                        "registeredOn": "25/05/2015",
                        "type": "FULL",
                        "status": "ACTIVE",
                        "brand": "BG"

                    }
                ]
            },
            "errors": {},
            "meta": {}
        }

+ Response 401 (application/json)

        {
            "status": "FAIL",
            "data": {},
            "errors": [
                {
                    "code": "authorize",
                    "message": "access_denied"
                }
            ],
            "meta": {}
        }



### Create a new online profile [POST]
+ Request (application/json)

    + Headers

            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

    + Body

            {
                "userinfo":{
                        "title": "Mr",
                        "firstName": "Junaid",
                        "surname": "Hussain",
                        "brand": "britishgas",
                        "id": "hussainjunaid@hotmail.com"
                    },
                "meta":{
                    "password": "password123",
                    "matchToken": "8c099369-ae94-53ef-a34b-bc8e01dce302"
                }
            }

+ Response 200 (application/json)

        {
            "status": "SUCCESS",
            "data": {
                "userinfo": [
                    {
                        "id": "junaid.hussain@centrica.com",
                        "title": "Mr",
                        "firstName": "Junaid",
                        "surname": "Hussain",
                        "type": "FULL",
                        "status": "ACTIVE",
                        "brand": "BG"
                    }
                ]
            },
            "errors": [],
            "meta": {}
        }

+ Response 403 (application/json)

        {
            "status": "FAIL",
            "data": {},
            "errors": [
                {
                    "code": "userinfo",
                    "message": "error.server.userinfo.exists"
                }
            ],
            "meta": {}
        }

+ Response 403 (application/json)

        {
            "status": "FAIL",
            "data": {},
            "errors": [
                {
                    "code": "userinfo",
                    "message": "error.client.matchToken.invalid"
                }
            ],
            "meta": {}
        }

+ Response 400 (application/json)

        {
            "status": "FAIL",
            "data": {},
            "errors": [
                {
                    "code": "userinfo",
                    "message": "error.client.firstName.exists"
                }
            ],
            "meta": {}
        }

+ Request (application/json)

    + Headers

            cid: 05e230bf-a9cf-4b31-bc54-d3a995f61234

    + Body

            {
                "userinfo":{
                        "title": "Mr",
                        "firstName": "J",
                        "surname": "H",
                        "brand": "britishgas",
                        "id": "hussainjunaid@hotmail.com"
                    },
                "meta":{
                    "password": "password123",
                    "onlineSales": "8c099369-ae94-53ef-a34b-bc8e01dce302"
                }
            }

+ Response 200 (application/json)

        {
            "status": "SUCCESS",
            "data": {
                "userinfo": [
                    {
                        "id": "junaid.hussain@centrica.com",
                        "title": "Mr",
                        "firstName": "J",
                        "surname": "H",
                        "type": "FULL",
                        "status": "ACTIVE",
                        "brand": "BG"
                    }
                ]
            },
            "errors": [],
            "meta": {}
        }

+ Response 403 (application/json)

        {
            "status": "FAIL",
            "data": {},
            "errors": [
                {
                    "code": "userinfo",
                    "message": "error.server.userinfo.exists"
                }
            ],
            "meta": {}
        }

+ Response 404 (application/json)

        {
            "status": "FAIL",
            "data": {},
            "errors": [
                {
                    "code": "onlineSales",
                    "message": "error.client.onlineSales.notFound"
                }
            ],
            "meta": {}
        }

+ Response 400 (application/json)

        {
            "status": "FAIL",
            "data": {},
            "errors": [
                {
                    "code": "firstName",
                    "message": "error.client.firstName.exists"
                }
            ],
            "meta": {}
        }

## UserInfo profile check [/userinfo/profile-check]
This endpoint allows you to check if a given user profile is registered at online or not.
The request body of this post must be a JSON object with attributes as listed below.

### Profile check [POST]
+ Request (application/json)

    + Headers

            Authorization: Bearer accesstoken
            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

    + Body

            {
                "email" : "Gnanasakthivel.Ramanathan@britishgas.co.uk",
                "brand" : "britishgas"

            }

+ Response 200 (application/json)

        {
            "status": "SUCCESS",
            "data": {
                "profileCheck": {
                    "status": "0xRM91"
                }
            },
            "errors": [],
            "meta": {}
        }

+ Response 400 (application/json)

        {
            "status": "FAIL",
            "data": {},
            "errors": [
                {
                    "code": "email",
                    "message": "error.client.emailAddress.blank"
                }
            ],
            "meta": {}
        }

## UserInfo by reference [/userinfo/find-by-reference]
This is a controller service which allows to find out whether a user with matching account number, home care number or sales order number, is available in SAP system. The request body of this post must be a JSON object with properties listed below

+ title - Mandatory
+ firstName - Mandatory
+ surname - Mandatory
+ customerReference - Mandatory

### Retrieve userinfo by reference [POST]
+ Request (application/json)

    + Headers

            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

    + Body

            {
                "title": "Mr",
                "firstName": "Pentwazz Stavea",
                "surname": "Kenj",
                "customerReference": "851001347680

            }

+ Response 200 (application/json)

            {
                "status": "SUCCESS",
                "data": {
                    "email": "gnanasakthivel.ramanathan@britishgas.co.uk"
                },
                "errors": [],
                "meta": {}
            }

+ Response 400 (application/json)

        {
            "status": "FAIL",
            "data": {},
            "errors": [
                {
                    "code": "title",
                    "message": "error.client.title.blank"
                }
            ],
            "meta": {}
        }

+ Response 403 (application/json)

        {
            "status": "FAIL",
            "data": {},
            "errors": [
                {
                    "code": "userinfo",
                    "message": "error.server.userinfo.invalid"
                }
            ],
            "meta": {}
        }

+ Response 403 (application/json)

        {
            "status": "FAIL",
            "data": {},
            "errors": [
                {
                    "code": "userinfo",
                    "message": "error.server.userinfo.notFound"
                }
            ],
            "meta": {}
        }

## Temporary profiles [/userinfo/temporary-profiles]
Creates a profile and triggers an email using a temporary password.
As an entity, following properties define a Temporary profile.

+ id - Optional
+ title - Mandatory
+ firstName - Mandatory
+ surname - Mandatory
+ email - Mandatory

### Create temporary profile [POST]
+ Request (application/json)

    + Headers

            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

    + Body

            {
                "temporaryProfile": {
                    "title": "Mr",
                    "firstName": "M",
                    "surname": "Street",
                    "email": "emailAddress@bgdigitaltest.co.uk"
                },
                "meta": {
                    "matchToken": "750319c2-dee6-5113-95f9-a1b501124a64"
                }
            }

+ Response 200 (application/json)

        {
              "status": "SUCCESS",
              "data": {
                "temporaryProfile": {
                  "id": "5aa6a106-c6d5-52c4-af9d-a3d0b361dffa",
                  "firstName": "M",
                  "surname": "Street",
                  "title": "Mr",
                  "email": "pradeepkrishna.govindaraju@centrica.com"
                }
              },
              "errors": [],
              "meta": {}
        }

+ Response 400 (application/json)

        {
              "status": "FAIL",
              "data": {},
              "errors": [
                {
                  "code": "matchToken",
                  "message": "error.client.matchToken.invalid"
                }
              ],
              "meta": {}
        }

+ Response 400 (application/json)

        {
              "status": "FAIL",
              "data": {},
              "errors": [
                {
                  "code": "firstName",
                  "message": "error.client.firstName.blank"
                }
              ],
              "meta": {}
        }

### Update temporary profile [PUT]

+ Request (application/json)

    + Headers

            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

    + Body

            {
                "temporaryProfile": {
                  "id": "5aa6a106-c6d5-52c4-af9d-a3d0b361dffa",
                  "firstName": "M",
                  "surname": "Street",
                  "title": "Mr",
                  "email": "pradeepkrishna.govindaraju@centrica.com"
                },
                "meta": {
                    "password": "password12"
                }
            }

+ Response 200 (application/json)

        {
                  "status": "SUCCESS",
                  "data": {},
                  "errors": [],
                  "meta": {}

        }

+ Response 404 (application/json)

        {
              "status": "FAIL",
              "data": {},
              "errors": [
                {
                  "code": "temporaryProfile",
                  "message": "error.client.temporaryProfile.invalid"
                }
              ],
              "meta": {}
        }

+ Response 400 (application/json)

        {
              "status": "FAIL",
              "data": {},
              "errors": [
                {
                  "code": "userinfo",
                  "message": "error.server.userinfo.exists"
                }
              ],
              "meta": {}
        }

+ Response 400 (application/json)

        {
              "status": "FAIL",
              "data": {},
              "errors": [
                {
                  "code": "firstName",
                  "message": "error.client.firstName.blank"
                }
              ],
              "meta": {}
        }

+ Response 400 (application/json)

        {
              "status": "FAIL",
              "data": {},
              "errors": [
                {
                  "code": "password",
                  "message": "error.client.password.invalid"
                }
              ],
              "meta": {}
        }

## Temporary Profile tokeninfo [/userinfo/temporary-profiles/token-info{?token}]

+ Parameters

    + token: 5aa6a106-c6d5-52c4-af9d-a3d0b361dffa (mandatory, string)

### Retrieve tokeninfo for password reset [GET]
+ Request

    + Headers

            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

+ Response 200 (application/json)

        {
              "title": "Mr",
              "email": "pradeepkrishna.govindaraju@centrica.com",
              "expiresIn": 1177,
              "surname": "Street",
              "firstName": "M"
        }

+ Response 400 (application/json)

        {
            "status": "FAIL",
            "data": {},
            "errors": [
                {
                    "code": "token",
                    "message": "error.client.token.invalid"
                }
            ],
            "meta": {}
        }

## Reset password request [/userinfo/reset-password-requests]
Reset password request endpoint allows a client to reset the current password for a customer.
As a resource, a ResetPasswordRequest represents following attributes.

+ email
+ brand
+ password
+ token

### Send password reset email [POST]
+ Request (application/json)

    + Headers

            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

    + Body

            {
                "resetPasswordRequest":
                {
                    "email" : "pradeepkrishna.govindarajucentrica.com",
                    "brand" : "britishgas"
                }
            }

+ Response 200 (application/json)

        {
            "status": "SUCCESS",
            "data": {},
            "errors": [],
            "meta": {}
        }

+ Response 400 (application/json)

        {
            "status": "FAIL",
            "data": {},
            "errors": [
                {
                    "code": "email",
                    "message": "error.client.email.invalid"
                }
            ],
            "meta": {}
        }

+ Response 400 (application/json)

        {
            "status": "FAIL",
            "data": {},
            "errors": [
                {
                    "code": "brand",
                    "message": "error.client.brand.invalid"
                }
            ],
            "meta": {}
        }

### Updating a new password [PUT]
Should you have a valid token to used via an email sent across, use this endpoint to update the new password for that customer.

Note: As soon as the password update is successful, token issued will be invalidated. Token can also be marked invalid if it has expired. Current expiry timelimit is 20 minutes.
+ Request (application/json)

    + Headers

            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

    + Body

            {
                "resetPasswordRequest":
                {
                    "token" : "f2d779a9-748b-58bc-aacb-8714b1206656",
                    "password" : "password12"
                }
            }

+ Response 200 (application/json)

        {
            "status": "SUCCESS",
            "data": {},
            "errors": [],
            "meta": {}
        }

+ Response 400 (application/json)

        {
            "status": "FAIL",
            "data": {},
            "errors": [
                {
                    "code": "payload",
                    "message": "error.client.token.invalid"
                }
            ],
            "meta": {}
        }

+ Response 400 (application/json)

        {
            "status": "FAIL",
            "data": {},
            "errors": [
                {
                    "code": "password",
                    "message": "error.client.password.invalid"
                }
            ],
            "meta": {}
        }

## Reset password request tokeninfo [/userinfo/reset-password-requests/token-info{?token}]

+ Parameters

    + token: 5aa6a106-c6d5-52c4-af9d-a3d0b361dffa (mandatory, string)

### Retrieve tokeninfo for password reset [GET]
+ Request

    + Headers

            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

+ Response 200 (application/json)

        {
              "title": "Mr",
              "email": "pradeepkrishna.govindaraju@centrica.com",
              "expiresIn": 1177,
              "surname": "Street",
              "firstName": "M"
        }

+ Response 400 (application/json)

        {
            "status": "FAIL",
            "data": {},
            "errors": [
                {
                    "code": "token",
                    "message": "error.client.token.invalid"
                }
            ],
            "meta": {}
        }


## Group Direct Debits
Direct Debits API allows you to list / view all the direct debit information of the logged in customer. Currently it supports only fixed monthly direct debit. Responses from this API will be returned in JSON format only.

## Direct Debits collection [/directdebits]
### Retrieve all direct debits [GET]
+ Request

    + Headers

            Authorization: Bearer accesstoken
            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

+ Response 200 (application/json)

        {
            "status": "SUCCESS",
            "data": {
                "directdebits": [
                    {
                        "id": "851001347400",
                        "account": "851001347400",
                        "numberOfInstallments": 10,
                        "numberOfPendingInstallments": 10,
                        "installments": [
                            {
                                "date": "26/05/2015",
                                "status": "pending",
                                "gasAmount": 17,
                                "electricityAmount": 15,
                                "totalAmount": 32
                            },
                            {
                                "date": "25/06/2015",
                                "status": "pending",
                                "gasAmount": 17,
                                "electricityAmount": 15,
                                "totalAmount": 32
                            },
                            {
                                "date": "25/07/2015",
                                "status": "pending",
                                "gasAmount": 17,
                                "electricityAmount": 15,
                                "totalAmount": 32
                            },
                            {
                                "date": "25/08/2015",
                                "status": "pending",
                                "gasAmount": 17,
                                "electricityAmount": 15,
                                "totalAmount": 32
                            },
                            {
                                "date": "25/09/2015",
                                "status": "pending",
                                "gasAmount": 17,
                                "electricityAmount": 15,
                                "totalAmount": 32
                            },
                            {
                                "date": "25/10/2015",
                                "status": "pending",
                                "gasAmount": 17,
                                "electricityAmount": 15,
                                "totalAmount": 32
                            },
                            {
                                "date": "25/11/2015",
                                "status": "pending",
                                "gasAmount": 17,
                                "electricityAmount": 15,
                                "totalAmount": 32
                            },
                            {
                                "date": "25/12/2015",
                                "status": "pending",
                                "gasAmount": 17,
                                "electricityAmount": 15,
                                "totalAmount": 32
                            },
                            {
                                "date": "25/01/2016",
                                "status": "pending",
                                "gasAmount": 17,
                                "electricityAmount": 15,
                                "totalAmount": 32
                            },
                            {
                                "date": "25/02/2016",
                                "status": "pending",
                                "gasAmount": 17,
                                "electricityAmount": 15,
                                "totalAmount": 32
                            }
                        ]
                    }
                ]
            },
            "errors": [],
            "meta": {}
        }

+ Response 401 (application/json)

        {
            "status": "FAIL",
            "data": {},
            "errors": [
                {
                    "code": "authorize",
                    "message": "access_denied"
                }
            ],
            "meta": {}
        }

### Retrieve all direct debits for accounts [GET /directdebits{?accountNumber}]
+ Parameters

    + accountNumber (optional, string) ...Multiple account numbers each one a seperate accountNumber= definition

+ Request

    + Headers

            Authorization: Bearer accesstoken
            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

+ Response 200 (application/json)

        {
            "status": "SUCCESS",
            "data": {
                "directdebits": [
                    {
                        "id": "851001347400",
                        "account": "851001347400",
                        "numberOfInstallments": 10,
                        "numberOfPendingInstallments": 10,
                        "installments": [
                            {
                                "date": "26/05/2015",
                                "status": "pending",
                                "gasAmount": 17,
                                "electricityAmount": 15,
                                "totalAmount": 32
                            },
                            {
                                "date": "25/06/2015",
                                "status": "pending",
                                "gasAmount": 17,
                                "electricityAmount": 15,
                                "totalAmount": 32
                            },
                            {
                                "date": "25/07/2015",
                                "status": "pending",
                                "gasAmount": 17,
                                "electricityAmount": 15,
                                "totalAmount": 32
                            },
                            {
                                "date": "25/08/2015",
                                "status": "pending",
                                "gasAmount": 17,
                                "electricityAmount": 15,
                                "totalAmount": 32
                            },
                            {
                                "date": "25/09/2015",
                                "status": "pending",
                                "gasAmount": 17,
                                "electricityAmount": 15,
                                "totalAmount": 32
                            },
                            {
                                "date": "25/10/2015",
                                "status": "pending",
                                "gasAmount": 17,
                                "electricityAmount": 15,
                                "totalAmount": 32
                            },
                            {
                                "date": "25/11/2015",
                                "status": "pending",
                                "gasAmount": 17,
                                "electricityAmount": 15,
                                "totalAmount": 32
                            },
                            {
                                "date": "25/12/2015",
                                "status": "pending",
                                "gasAmount": 17,
                                "electricityAmount": 15,
                                "totalAmount": 32
                            },
                            {
                                "date": "25/01/2016",
                                "status": "pending",
                                "gasAmount": 17,
                                "electricityAmount": 15,
                                "totalAmount": 32
                            },
                            {
                                "date": "25/02/2016",
                                "status": "pending",
                                "gasAmount": 17,
                                "electricityAmount": 15,
                                "totalAmount": 32
                            }
                        ]
                    }
                ]
            },
            "errors": [],
            "meta": {}
        }

+ Response 401 (application/json)

        {
            "status": "FAIL",
            "data": {},
            "errors": [
                {
                    "code": "authorize",
                    "message": "access_denied"
                }
            ],
            "meta": {}
        }


### Get a specific Direct Debit [GET /directdebits/{directDebitId}]

+ Parameters

    + directDebitId (string) ...directDebitId is the account number associated to the contract

+ Request

    + Headers

            Authorization: Bearer accesstoken
            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

+ Response 200 (application/json)

        {
            "status": "SUCCESS",
            "data": {
                "directdebit": {
                    "id": "851001347400",
                    "account": "851001347400",
                    "numberOfInstallments": 10,
                    "numberOfPendingInstallments": 10,
                    "installments": [
                        {
                            "date": "26/05/2015",
                            "status": "pending",
                            "gasAmount": 17,
                            "electricityAmount": 15,
                            "totalAmount": 32
                        },
                        {
                            "date": "25/06/2015",
                            "status": "pending",
                            "gasAmount": 17,
                            "electricityAmount": 15,
                            "totalAmount": 32
                        },
                        {
                            "date": "25/07/2015",
                            "status": "pending",
                            "gasAmount": 17,
                            "electricityAmount": 15,
                            "totalAmount": 32
                        },
                        {
                            "date": "25/08/2015",
                            "status": "pending",
                            "gasAmount": 17,
                            "electricityAmount": 15,
                            "totalAmount": 32
                        },
                        {
                            "date": "25/09/2015",
                            "status": "pending",
                            "gasAmount": 17,
                            "electricityAmount": 15,
                            "totalAmount": 32
                        },
                        {
                            "date": "25/10/2015",
                            "status": "pending",
                            "gasAmount": 17,
                            "electricityAmount": 15,
                            "totalAmount": 32
                        },
                        {
                            "date": "25/11/2015",
                            "status": "pending",
                            "gasAmount": 17,
                            "electricityAmount": 15,
                            "totalAmount": 32
                        },
                        {
                            "date": "25/12/2015",
                            "status": "pending",
                            "gasAmount": 17,
                            "electricityAmount": 15,
                            "totalAmount": 32
                        },
                        {
                            "date": "25/01/2016",
                            "status": "pending",
                            "gasAmount": 17,
                            "electricityAmount": 15,
                            "totalAmount": 32
                        },
                        {
                            "date": "25/02/2016",
                            "status": "pending",
                            "gasAmount": 17,
                            "electricityAmount": 15,
                            "totalAmount": 32
                        }
                    ]
                }
            },
            "errors": [],
            "meta": {}
        }

+ Response 401 (application/json)

        {
            "status": "FAIL",
            "data": {},
            "errors": [
                {
                    "code": "authorize",
                    "message": "access_denied"
                }
            ],
            "meta": {}
        }

+ Response 404 (application/json)

        {
            "status": "FAIL",
            "data": {},
            "errors": [
                {
                    "code": "directdebit",
                    "message": "error.client.directdebit.notfound"
                }
            ],
            "meta": {}
        }

## Group Products Holdings

## Product Holdings [/product-holdings]
Product Holdings API allows you to list / view all the product holdings of the logged in customer. Responses from this API will be retuned in JSON format only.

# Energy Product holding

Energy product holding as a resource represents following information

+ id (string) - Combination of account number and product code is considered as the unique identifier.
+ type (string) - Specifies which data model is supported by the resources, it will be EnergyProductHolding.
+ moveInDate (string) - Date when the product is moved to the address, in dd/MM/yyyy format.
+ moveOutDate (string) - Date when the product will be moved out the address, in dd/MM/yyyy format, by default this is 31/12/9999
+ productCode (string) - Product code, 1601 for gas and 1602 for electricity.
+ tariffCode (string) - Tariff code for the product, if available.
+ productTypeDescription (string) - Product description of the product, if available.
+ account (string) - Account number to which the product is linked, if available.
+ propositionId (string) - Proposition id for the product.
+ tariffName (String) - Tariff description for the product, if available.
+ isTariffEnergySmart (boolean) - Indicates that the product has energy smart tariff if the value is true.
+ isMonthlyBilling (boolean) - Indicates that the product is monthly billed if the value is true.
+ isSmartMonthlyBilling (boolean) - Indicates that the product is smart monthly billed if the value is true.
+ isSmartMeterProduct (boolean) - Indicates that the product is having a smart meter if the value is true.
+ features (Array of string) - Mentions any specific features of the product
+ monthlyBillingData (Complex type) - All the monthly billing information which includes current bill day, estimated read counter, installment date, signup date, current proposition id and next bill date.

# Service Product holding

Service product holding as a resource represents following information

+ id (string) - Combination of account number and product code is considered as the unique identifier.
+ type (string) - Specifies which data model is supported by the resources, it will be ServicesProductHolding.
+ productCode (string) - Product code of the product.
+ customerId (string) - Customer id associated to the product, if available.
+ productTypeDescription (string) - Product description of the product, if available.
+ productName (string) - Name of the product, if available.
+ account (string) - Account number to which the product is linked, if available.
+ propositionId (string) - Proposition id for the product.
+ premiseId (String) - Premise id associated to the product, if available.
+ isPlumbingAndDrains (boolean) - Indicates that the product has plumbing and drains, if the value is true.
+ isCrossSellProduct (boolean) - Indicates that the product is a cross sell product, if the value is true.
+ features (Array of string) - Mentions any specific features of the product

# Order product holding

+ id (string) - Combination of order number and product code is considered as the unique identifier.
+ type (string) - Specifies which data model is supported by the resources, it will be OrderProductHolding.
+ productCode (string) - Product type, Gas for gas and Electricity for electricity.
+ account (string) - Order number to which the product is linked, if available.

### Retrieve Product holdings [GET /product-holdings]
+ Request

    + Headers

            Authorization: Bearer accesstoken
            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

+ Response 200 (application/json)

            {
                "status": "SUCCESS",
                "data": {
                    "productHoldings": [
                        {
                            "isSmartMonthlyBilling": false,
                            "moveInDate": "01/01/2014",
                            "moveOutDate": "31/12/9999",
                            "productCode": "1601",
                            "monthlyBillingData": {
                                "currentBillDay": "0",
                                "estimatedReadCounter": "0",
                                "installmentDate": null,
                                "signUpDate": null,
                                "currentPropositionId": "00",
                                "nextBillDate": null
                            },
                            "tariffCode": "GSD",
                            "isMonthlyBilling": false,
                            "type": "EnergyProductHolding",
                            "id": "851002262167-1601",
                            "isTariffEnergySmart": false,
                            "productTypeDescription": "Gas",
                            "features": [
                                "Standard"
                            ],
                            "account": "851002262167",
                            "propositionId": "00",
                            "tariffName": "Standard",
                            "isSmartMeterProduct": false
                        },
                        {
                            "isSmartMonthlyBilling": false,
                            "moveInDate": "01/01/2014",
                            "moveOutDate": "31/12/9999",
                            "productCode": "1602",
                            "monthlyBillingData": {
                                "currentBillDay": "0",
                                "estimatedReadCounter": "0",
                                "installmentDate": null,
                                "signUpDate": null,
                                "currentPropositionId": "00",
                                "nextBillDate": null
                            },
                            "tariffCode": "ESD",
                            "isMonthlyBilling": false,
                            "type": "EnergyProductHolding",
                            "id": "851002262167-1602",
                            "isTariffEnergySmart": false,
                            "productTypeDescription": "Electricity",
                            "features": [
                                "Standard"
                            ],
                            "account": "851002262167",
                            "propositionId": "00",
                            "tariffName": "Standard",
                            "isSmartMeterProduct": false
                        },
                        {
                            "productCode": "ZSIS",
                            "isPlumbingAndDrains": false,
                            "type": "ServicesProductHolding",
                            "id": "911000156354-ZSIS",
                            "customerId": "22212484",
                            "productTypeDescription": "HomeCare 300(TM)",
                            "isCrossSellProduct": false,
                            "features": [
                                "Boiler & controls",
                                "First service visit"
                            ],
                            "account": "911000156354",
                            "propositionId": "1",
                            "premiseId": "L280628",
                            "productName": "Central Heating"
                        },
                        {
                            "productCode": "ZPDI",
                            "isPlumbingAndDrains": true,
                            "type": "ServicesProductHolding",
                            "id": "911000156354-ZPDI",
                            "customerId": "22212484",
                            "productTypeDescription": "HomeCare 300(TM)",
                            "isCrossSellProduct": false,
                            "features": [
                                "Boiler & controls",
                                "Plumbing & drains",
                                "First service visit"
                            ],
                            "account": "911000156354",
                            "propositionId": "0",
                            "premiseId": "L280628",
                            "productName": "Plumbing & Drains Cover (TM)"
                        },
                        {
                            "id": "2005895634-Gas",
                            "productCode": "Gas",
                            "account": "2005895634",
                            "type": "OrderProductHolding"
                        }
                    ]
                },
                "errors": {},
                "meta": {}
            }

+ Response 401 (application/json)

            {
                "status": "FAIL",
                "data": {},
                "errors": {
                    "authorize": "invalid_request"
                },
                "meta": {}
            }


### Retrieve specific product holdings using account number [GET /product-holdings{?accountNumber*}]
+ Parameters

    + accountNumber (number) ...This is the customers account number

+ Request

    + Headers

            Authorization: Bearer accesstoken
            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

+ Response 200 (application/json)

            {
                "status": "SUCCESS",
                "data": {
                    "productHoldings": [
                        {
                            "isSmartMonthlyBilling": false,
                            "moveInDate": "01/01/2014",
                            "moveOutDate": "31/12/9999",
                            "productCode": "1601",
                            "monthlyBillingData": {
                                "currentBillDay": "0",
                                "estimatedReadCounter": "0",
                                "installmentDate": null,
                                "signUpDate": null,
                                "currentPropositionId": "00",
                                "nextBillDate": null
                            },
                            "tariffCode": "GSD",
                            "isMonthlyBilling": false,
                            "type": "EnergyProductHolding",
                            "id": "851002262167-1601",
                            "isTariffEnergySmart": false,
                            "productTypeDescription": "Gas",
                            "features": [
                                "Standard"
                            ],
                            "account": "851002262167",
                            "propositionId": "00",
                            "tariffName": "Standard",
                            "isSmartMeterProduct": false
                        },
                        {
                            "isSmartMonthlyBilling": false,
                            "moveInDate": "01/01/2014",
                            "moveOutDate": "31/12/9999",
                            "productCode": "1602",
                            "monthlyBillingData": {
                                "currentBillDay": "0",
                                "estimatedReadCounter": "0",
                                "installmentDate": null,
                                "signUpDate": null,
                                "currentPropositionId": "00",
                                "nextBillDate": null
                            },
                            "tariffCode": "ESD",
                            "isMonthlyBilling": false,
                            "type": "EnergyProductHolding",
                            "id": "851002262167-1602",
                            "isTariffEnergySmart": false,
                            "productTypeDescription": "Electricity",
                            "features": [
                                "Standard"
                            ],
                            "account": "851002262167",
                            "propositionId": "00",
                            "tariffName": "Standard",
                            "isSmartMeterProduct": false
                        }
                    ]
                },
                "errors": {},
                "meta": {}
            }

+ Response 401 (application/json)

            {
                "status": "FAIL",
                "data": {},
                "errors": {
                    "authorize": "invalid_request"
                },
                "meta": {}
            }

+ Response 400 (application/json)

            {
                "status": "ERROR",
                "data": {},
                "errors": {
                                "accountNumber": "error.client.accountnumber.invalid"
                },
                "meta": {}
            }


+ Response 401 (application/json)

            {
                "status": "ERROR",
                "data": {},
                "errors": {
                    "accountNumber": "error.client.accountnumber.invalid"
                },
                "meta": {}
            }


### Retrieve product holdings using product id [GET /product-holdings{productId}]
+ Parameters

    + productId (number) ...This is the customers account number

+ Request

    + Headers

            Authorization: Bearer accesstoken
            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

+ Response 200 (application/json)

            {
                "status": "SUCCESS",
                "data": {
                    "productHolding": {
                        "productCode": "ZSIS",
                        "isPlumbingAndDrains": false,
                        "type": "ServicesProductHolding",
                        "id": "911000156354-ZSIS",
                        "customerId": "22212484",
                        "productTypeDescription": "HomeCare 300(TM)",
                        "isCrossSellProduct": false,
                        "features": [
                            "Boiler & controls",
                            "First service visit"
                        ],
                        "account": "911000156354",
                        "propositionId": "1",
                        "premiseId": "L280628",
                        "productName": "Central Heating"
                    }
                },
                "errors": {},
                "meta": {}
            }

+ Response 400 (application/json)

            {
                "status": "ERROR",
                "data": {},
                "errors": {
                    "productId": "error.client.productId.invalid"
                },
                "meta": {}
            }


+ Response 401 (application/json)

            {
                "status": "FAIL",
                "data": {},
                "errors": {
                    "authorize": "invalid_request"
                },
                "meta": {}
            }

+ Response 404 (application/json)

            {
                "status": "ERROR",
                "data": {},
                "errors": {
                    "productId": "error.client.product.notfound"
                },
                "meta": {}
            }


## Group Product Bundles
Product Bundles API allows you to view the base information about a product bundle, understand how the product bundle and its
constituent products can be configured and establish the relationship between a product bundle and its constituent products.

## Product Bundles collection [/product-bundles]

A Product Bundles object has the following attributes:

+ id - string
+ description - string
+ type - string
+ applicableExcessForBundle - array
+ applicablePaymentMethodsForBundle - array
+ products - array of products
+ productFeatures - array of product-features

### Retrieve Product Bundle Information for all HomeCare bundles [GET /product-bundles]

+ Request

    + Headers

            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526
            
+ Response 200 (application/json)

        {
            "status": "SUCCESS",
            "data": {
            "productBundle":[
                {
                    "id": "HC100",
                    "description": "Homecare 100",
                    "type": "Services",
                    "applicableExcessForBundle": [0, 60],
                    "applicablePaymentMethodsForBundle": [
                        {
                            "type": "MDD",
                            "description": "Monthly Direct Debit"
                        },
                        {
                            "type": "ADD",
                            "description": "Annual Direct Debit"
                        },
                        {
                            "type": "CC",
                            "description": "Annual Credit or Debit Card"
                        }
                    ],
                    "products": ["HC100-BC"]
                },
                {
                    "id": "HC200",
                    "description": "Homecare 200",
                    "type": "Services",
                    "applicableExcessForBundle": [0, 60],
                    "applicablePaymentMethodsForBundle": [
                        {
                            "type": "MDD",
                            "description": "Monthly Direct Debit"
                        },
                        {
                            "type": "ADD",
                            "description": "Annual Direct Debit"
                        },
                        {
                            "type": "CC",
                            "description": "Annual Credit or Debit Card"
                        }
                    ],
                    "products": ["HC200-CH"]
                },
                {
                    "id": "HC300",
                    "description": "Homecare 200",
                    "type": "Services",
                    "applicableExcessForBundle": [0, 60],
                    "applicablePaymentMethodsForBundle": [
                        {
                            "type": "MDD",
                            "description": "Monthly Direct Debit"
                        },
                        {
                            "type": "ADD",
                            "description": "Annual Direct Debit"
                        },
                        {
                            "type": "CC",
                            "description": "Annual Credit or Debit Card"
                        }
                    ],
                    "products": ["HC300-CH", "HC300-PD"]
                },
                {
                    "id": "HC400",
                    "description": "Homecare 400",
                    "type": "Services",
                    "applicableExcessForBundle": [0, 60],
                    "applicablePaymentMethodsForBundle": [
                        {
                            "type": "MDD",
                            "description": "Monthly Direct Debit"
                        },
                        {
                            "type": "ADD",
                            "description": "Annual Direct Debit"
                        },
                        {
                            "type": "CC",
                            "description": "Annual Credit or Debit Card"
                        }
                    ],
                    "products": ["HC400-CH", "HC400-PD", "HC400-HEC"]
                }
            ],
                "products": [
                    {
                        "id": "HC100-BC",
                        "description": "Boilers & controls",
                        "type": "Services",
                        "isAnnualServiceApplicable": true,
                        "numberOfAppliances": 1,
                        "applicableExcess": [0, 60],
                        "applicablePaymentMethods": [
                            {
                                "type": "MDD",
                                "description": "Monthly Direct Debit"
                            },
                            {
                                "type": "ADD",
                                "description": "Annual Direct Debit"
                            },
                            {
                                "type": "CC",
                                "description": "Annual Credit or Debit Card"
                            }
                        ],
                        "applicableApplianceTypes": [
                            {
                                "type": "BBC",
                                "description": "Back Boiler Circulator"
                            },
                            {
                                "type": "BBF",
                                "description": "Back Boiler Fire"
                            },
                            {
                                "type": "CHB",
                                "description": "Central Heating Boiler"
                            },
                            {
                                "type": "WAU",
                                "description": "Warm Air Unit"
                            },
                            {
                                "type": "WAW",
                                "description": "Warm Air With Water Heater"
                            }
                        ],
                        "isAnnualServiceMandatory": true,
                        "productFeatures": ["HC100|HC100-BC|2SIS|CHB|MDD", "HC100|HC100-BC|2FIS|CHB|MDD"]
                    },
                    {
                        "id": "HC200-CH",
                        "description": "Central Heating",
                        "type": "Services",
                        "isAnnualServiceApplicable": true,
                        "numberOfAppliances": 1,
                        "applicableExcess": [0, 60],
                        "applicablePaymentMethods": [
                            {
                                "type": "MDD",
                                "description": "Monthly Direct Debit"
                            },
                            {
                                "type": "ADD",
                                "description": "Annual Direct Debit"
                            },
                            {
                                "type": "CC",
                                "description": "Annual Credit or Debit Card"
                            }
                        ],
                        "applicableApplianceTypes": [
                            {
                                "type": "BBC",
                                "description": "Back Boiler Circulator"
                            },
                            {
                                "type": "BBF",
                                "description": "Back Boiler Fire"
                            },
                            {
                                "type": "CHB",
                                "description": "Central Heating Boiler"
                            },
                            {
                                "type": "WAU",
                                "description": "Warm Air Unit"
                            },
                            {
                                "type": "WAW",
                                "description": "Warm Air With Water Heater"
                            }
                        ],
                        "isAnnualServiceMandatory": true,
                        "productFeatures": ["HC200|HC200-CH|3SIS|CHB|MDD", "HC200|HC200-CH|3FIS|CHB|MDD"]
                    },
                    {
                        "id": "HC300-CH",
                        "description": "Central Heating",
                        "type": "Services",
                        "isAnnualServiceApplicable": true,
                        "numberOfAppliances": 1,
                        "applicableExcess": [0, 60],
                        "applicablePaymentMethods": [
                            {
                                "type": "MDD",
                                "description": "Monthly Direct Debit"
                            },
                            {
                                "type": "ADD",
                                "description": "Annual Direct Debit"
                            },
                            {
                                "type": "CC",
                                "description": "Annual Credit or Debit Card"
                            }
                        ],
                        "applicableApplianceTypes": [
                            {
                                "type": "BBC",
                                "description": "Back Boiler Circulator"
                            },
                            {
                                "type": "BBF",
                                "description": "Back Boiler Fire"
                            },
                            {
                                "type": "CHB",
                                "description": "Central Heating Boiler"
                            },
                            {
                                "type": "WAU",
                                "description": "Warm Air Unit"
                            },
                            {
                                "type": "WAW",
                                "description": "Warm Air With Water Heater"
                            }   
                        ],
                        "isAnnualServiceMandatory": true,
                        "productFeatures": ["HC300|HC300-CH|3SIS|CHB|MDD", "HC300|HC300-CH|3FIS|CHB|MDD"]
                    },
                    {
                        "id": "HC300-PD",
                        "description": "Plumbing and drains",
                        "type": "Services",
                        "isAnnualServiceApplicable": false,
                        "numberOfAppliances": 1,
                        "applicableExcess": [0, 60],
                        "applicablePaymentMethods": [
                            {
                                "type": "MDD",
                                "description": "Monthly Direct Debit"
                            },
                            {
                                "type": "ADD",
                                "description": "Annual Direct Debit"
                            },
                            {
                                "type": "CC",
                                "description": "Annual Credit or Debit Card"
                            }
                        ],
                        "applicableApplianceTypes": [
                            {
                                "type": "PLDR",
                                "description": "Plumbing and drains"
                            }
                        ],
                        "isAnnualServiceMandatory": false,
                        "productFeatures": ["HC300|HC300-PD|2PDI|PLDR|MDD", "HC300|HC300-PD|2PFI|PLDR|MDD"]
                    },
                    {
                        "id": "HC400-CH",
                        "description": "Central Heating",
                        "type": "Services",
                        "isAnnualServiceApplicable": true,
                        "numberOfAppliances": 1,
                        "applicableExcess": [0, 60],
                        "applicablePaymentMethods": [
                            {
                                "type": "MDD",
                                "description": "Monthly Direct Debit"
                            },
                            {
                                "type": "ADD",
                                "description": "Annual Direct Debit"
                            },
                            {
                                "type": "CC",
                                "description": "Annual Credit or Debit Card"
                            }
                        ],
                        "applicableApplianceTypes": [
                            {
                                "type": "BBC",
                                "description": "Back Boiler Circulator"
                            },
                            {
                                "type": "BBF",
                                "description": "Back Boiler Fire"
                            },
                            {
                                "type": "CHB",
                                "description": "Central Heating Boiler"
                            },
                            {
                                "type": "WAU",
                                "description": "Warm Air Unit"
                            },
                            {
                                "type": "WAW",
                                "description": "Warm Air With Water Heater"
                            }
                        ],
                        "isAnnualServiceMandatory": true,
                        "productFeatures": ["HC400|HC400-CH|3SIS|CHB|MDD", "HC400|HC400-CH|3FIS|CHB|MDD"]
                    },
                    {
                        "id": "HC400-PD",
                        "description": "Plumbing and drains",
                        "type": "Services",
                        "isAnnualServiceApplicable": false,
                        "numberOfAppliances": 1,
                        "applicableExcess": [0, 60],
                        "applicablePaymentMethods": [
                            {
                                "type": "MDD",
                                "description": "Monthly Direct Debit"
                            },
                            {
                                "type": "ADD",
                                "description": "Annual Direct Debit"
                            },
                            {
                                "type": "CC",
                                "description": "Annual Credit or Debit Card"
                            }
                        ],
                        "applicableApplianceTypes": [
                            {
                                "type": "PLDR",
                                "description": "Plumbing and drains"
                            }
                        ],
                        "isAnnualServiceMandatory": false,
                        "productFeatures": ["HC400|HC400-PD|2PDI|PLDR|MDD", "HC400|HC400-PD|2PFI|PLDR|MDD"]
                    },
                    {
                        "id": "HC400-HEC",
                        "description": "Home Electrics",
                        "type": "Services",
                        "isAnnualServiceApplicable": false,
                        "numberOfAppliances": 1,
                        "applicableExcess": [0, 60],
                        "applicablePaymentMethods": [
                            {
                                "type": "MDD",
                                "description": "Monthly Direct Debit"
                            },
                            {
                                "type": "ADD",
                                "description": "Annual Direct Debit"
                            },
                            {
                                "type": "CC",
                                "description": "Annual Credit or Debit Card"
                            }
                        ],
                        "applicableApplianceTypes": [
                            {
                                "type": "EWR",
                                "description": "Electrical wiring"
                            }
                        ],
                        "isAnnualServiceMandatory": false,
                        "productFeatures": ["HC400|HC400-HEC|HEWI|EWR|MDD", "HC400|HC400-HEC|HEFI|EWR|MDD"]
                    }
                ],
                "productFeatures": [
                    {
                        "id": "HC100|HC100-BC|2SIS|CHB|MDD",
                        "excess": 0,
                        "annualServiceVisitSelected": true,
                        "applianceType": "CHB",
                        "paymentMethod": "MDD",
                        "levelOfService": "2SIS"
                    },
                    {
                        "id": "HC100|HC100-BC|2FIS|CHB|MDD",
                        "excess": 60,
                        "annualServiceVisitSelected": true,
                        "applianceType": "CHB",
                        "paymentMethod": "MDD",
                        "levelOfService": "2FIS"
                    },
                    {
                        "id": "HC200|HC200-CH|3SIS|CHB|MDD",
                        "excess": 0,
                        "annualServiceVisitSelected": true,
                        "applianceType": "CHB",
                        "paymentMethod": "MDD",
                        "levelOfService": "3SIS"
                    },
                    {
                        "id": "HC200|HC200-CH|3FIS|CHB|MDD",
                        "excess": 60,
                        "annualServiceVisitSelected": true,
                        "applianceType": "CHB",
                        "paymentMethod": "MDD",
                        "levelOfService": "3FIS"
                    },
                    {
                        "id": "HC300|HC300-CH|3SIS|CHB|MDD",
                        "excess": 0,
                        "annualServiceVisitSelected": true,
                        "applianceType": "CHB",
                        "paymentMethod": "MDD",
                        "levelOfService": "3SIS"
                    },
                    {
                        "id": "HC300|HC300-CH|3FIS|CHB|MDD",
                        "excess": 60,
                        "annualServiceVisitSelected": true,
                        "applianceType": "CHB",
                        "paymentMethod": "MDD",
                        "levelOfService": "3FIS"
                    },
                    {
                        "id": "HC300|HC300-PD|2PDI|PLDR|MDD",
                        "excess": 0,
                        "annualServiceVisitSelected": false,
                        "applianceType": "PLDR",
                        "paymentMethod": "MDD",
                        "levelOfService": "2PDI"
                    },
                    {
                        "id": "HC300|HC300-PD|2PFI|PLDR|MDD",
                        "excess": 60,
                        "annualServiceVisitSelected": false,
                        "applianceType": "PLDR",
                        "paymentMethod": "MDD",
                        "levelOfService": "2PFI"
                    },
                    {
                        "id": "HC400|HC400-CH|3SIS|CHB|MDD",
                        "excess": 0,
                        "annualServiceVisitSelected": true,
                        "applianceType": "CHB",
                        "paymentMethod": "MDD",
                        "levelOfService": "3SIS"
                    },
                    {
                        "id": "HC400|HC400-CH|3FIS|CHB|MDD",
                        "excess": 60,
                        "annualServiceVisitSelected": true,
                        "applianceType": "CHB",
                        "paymentMethod": "MDD",
                        "levelOfService": "3FIS"
                    },
                    {
                        "id": "HC400|HC400-PD|2PDI|PLDR|MDD",
                        "excess": 0,
                        "annualServiceVisitSelected": false,
                        "applianceType": "PLDR",
                        "paymentMethod": "MDD",
                        "levelOfService": "2PDI"
                    },
                    {
                        "id": "HC400|HC400-PD|2PFI|PLDR|MDD",
                        "excess": 60,
                        "annualServiceVisitSelected": false,
                        "applianceType": "PLDR",
                        "paymentMethod": "MDD",
                        "levelOfService": "2PFI"
                    },
                    {
                        "id": "HC400|HC400-HEC|HEWI|EWR|MDD",
                        "excess": 0,
                        "annualServiceVisitSelected": false,
                        "applianceType": "EWR",
                        "paymentMethod": "MDD",
                        "levelOfService": "HEWI"
                    },
                    {
                        "id": "HC400|HC400-HEC|HEFI|EWR|MDD",
                        "excess": 60,
                        "annualServiceVisitSelected": false,
                        "applianceType": "EWR",
                        "paymentMethod": "MDD",
                        "levelOfService": "HEFI"
                    }
                ]
            },
            "errors": [],
            "meta": {}
        }

        {
            "status": "ERROR",
            "data": {},
            "errors": [
                {
                    "code": "products",
                    "message": "error.client.products.notFound"
                }
            ],
            "meta": {}
        }

### Retrieve Product Bundle Information Based on an ID [GET /product-bundles{id}]

+ Parameters

    + id (required, string)

+ Request

    + Headers

            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

+ Response 200 (application/json)

        {
            "status": "SUCCESS",
            "data": {
                "productBundle": [
                    {
                        "id": "HC400",
                        "description": "Homecare 400",
                        "type": "Services",
                        "applicableExcessForBundle": [0, 50, 99],
                        "applicablePaymentMethodsForBundle": [
                            {
                                "type": "MDD",
                                "description": "Monthly Direct Debit"
                            },
                            {
                                "type": "ADD",
                                "description": "Annual Direct Debit"
                            },
                            {
                                "type": "CC",
                                "description": "Annual Credit or Debit Card"
                            }
                        ],
                        "products": [
                            "HC400-CH",
                            "HC400-PD",
                            "HC400-HEC"
                        ]
                    },
                "products": [
                    {
                        "id": "HC400-CH",
                        "description": "Central Heating",
                        "type": "Services",
                        "isAnnualServiceApplicable": true,
                        "isAnnualServiceMandatory": true,
                        "numberOfAppliances": 1,
                        "applicableExcess": [0, 50, 99],
                        "applicablePaymentMethods": [
                            {
                                "type": "MDD",
                                "description": "Monthly Direct Debit"
                            },
                            {
                                "type": "ADD",
                                "description": "Annual Direct Debit"
                            },
                            {
                                "type": "CC",
                                "description": "Annual Credit or Debit Card"
                            }
                        ],
                        "applicableApplianceTypes": [
                            {
                                "type": "BBC",
                                "description": "Back Boiler Circulator"
                            },
                            {
                                "type": "BBF",
                                "description": "Back Boiler Fire"
                            },
                            {
                                "type": "CHB",
                                "description": "Central Heating Boiler"
                            },
                            {
                                "type": "WAU",
                                "description": "Warm Air Unit"
                            },
                            {
                                "type": "WAW",
                                "description": "Warm Air With Water Heater"
                            }
                        ],
                        "productFeature": "HC400|HC400-CH|3FI1|BBC|MDD"
                    },
                    {
                        "id": "HC400-PD",
                        "description": "Plumbing & drains",
                        "type": "Services",
                        "isAnnualServiceApplicable": false,
                        "isAnnualServiceMandatory": false,
                        "numberOfAppliances": 1,
                        "applicableExcess": [0, 50],
                        "applicablePaymentMethods": [
                            {
                                "type": "MDD",
                                "description": "Monthly Direct Debit"
                            },
                            {
                                "type": "ADD",
                                "description": "Annual Direct Debit"
                            },
                            {
                                "type": "CC",
                                "description": "Annual Credit or Debit Card"
                            }
                        ],
                        "applicableApplianceTypes": [
                            {
                                "type": "PLDR",
                                "description": "Plumbing and drains"
                            }
                        ],
                        "productFeature": "HC400|HC400-PD|2PFI|PLDR|MDD"
                    },
                    {
                        "id": "HC400-HEC",
                        "description": "Home Electrics",
                        "type": "Services",
                        "isAnnualServiceApplicable": false,
                        "isAnnualServiceMandatory": false,
                        "numberOfAppliances": 1,
                        "applicableExcess": [0, 50],
                        "applicablePaymentMethods": [
                            {
                                "type": "MDD",
                                "description": "Monthly Direct Debit"
                            },
                            {
                                "type": "ADD",
                                "description": "Annual Direct Debit"
                            },
                            {
                                "type": "CC",
                                "description": "Annual Credit or Debit Card"
                            }
                        ],
                        "applicableApplianceTypes": [
                            {
                                "type": "EWR",
                                "description": "Electrical wiring"
                            }
                        ],
                        "productFeature": "HC400|HC400-HEC|HEFI|EWR|MDD"
                    }
                ],
                "productFeatures": [
                    {
                        "id": "HC400|HC400-CH|3FI1|BBC|MDD",
                        "excess": 99,
                        "annualServiceVisitSelected": true,
                        "applianceType": "BBC",
                        "paymentMethod": "MDD",
                        "levelOfService": "3FI1"
                    },
                    {
                        "id": "HC400|HC400-PD|2PFI|PLDR|MDD",
                        "excess": 50,
                        "annualServiceVisitSelected": false,
                        "applianceType": "PLDR",
                        "paymentMethod": "MDD",
                        "levelOfService": "2PFI"
                    },
                    {
                        "id": "HC400|HC400-HEC|HEFI|EWR|MDD",
                        "excess": 50,
                        "annualServiceVisitSelected": false,
                        "applianceType": "EWR",
                        "paymentMethod": "MDD",
                        "levelOfService": "HEFI"
                    }
                ]
            },
            "errors": [],
            "meta": {}
        }

+ Response 404 (application/json)

        {
            "status": "ERROR",
            "data": {},
            "errors": [
                {
                    "code": "bundle",
                    "message": "error.client.bundle.notFound"
                }
            ],
            "meta": {}
        }

+ Response 500 (application/json)

        {
            "status" : ERROR
            "data": {}
            "errors": [
                {
                    "code": "bundlePaymentMethods",
                    "message": "error.client.bundle.paymentMethod.notFound"
                }
            ]
            "meta": {}
        }

##Group Products

Resources related to Product in the API.

## Products [/products]

### List all product options for a particlar product [GET /products/{id}]

A Product object has the following attributes:

+ id - string
+ description - string
+ type - string
+ isAnnualServiceApplicable - Boolean
+ isAnnualServiceMandatory - Boolean
+ applicableExcess - array
+ applicablePaymentMethods - array
+ applicableApplianceTypes - array
+ productFeatures - array of product-features

+ Parameters

    + id (required, string)

+ Request

    + Headers

            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

+ Response 200 (application/json)

        {
            "status" : "SUCCESS"
            "data": [
                {
                    "product": [
                        {
                            "id": "KAC-5",
                            "description": "Kitchen Appliance Cover for 5 appliances",
                            "type": "Services",
                            "isAnnualServiceApplicable": false,
                            "isAnnualServiceMandatory": false,
                            "applicableExcess": ["50", "0"],
                            "applicablePaymentMethods": [
                                {
                                    "type": "MDD",
                                    "description": "Monthly direct debit"
                                }, {
                                    "type": "ADD",
                                    "description": "Annual direct debit"
                                }
                            ]
                            "applicableApplianceTypes": [
                                {
                                    "type": "HOE",
                                    "description": "Built-in electric hob"
                                }, {
                                    "type": "EOB",
                                    "description": "Built-in electric oven"
                                }, {
                                    "type": "HOB",
                                    "description": "Built-in gas hob"
                                }, {
                                    "type": "OVN",
                                    "description": "Built-in gas oven"
                                }, {
                                    "type": "WD",
                                    "description": "Combined washer dryer"
                                }, {
                                    "type": "DW",
                                    "description": "Dishwasher"
                                }, {
                                    "type: "TDE",
                                    "description": "Electric tumble dryer"
                                }, {
                                    "type: "CKE",
                                    "description": "Free standing electric cooker"
                                }, {
                                    "type: "CKR",
                                    "description": "Free standing gas cooker"
                                }, {
                                    "type: "FRI",
                                    "description": "Fridge"
                                }, {
                                    "type: "FZR",
                                    "description": "Freezer"
                                }, {
                                    "type: "FFR",
                                    "description": "Fridge-freezer"
                                }, {
                                    "type: "TDG",
                                    "description": "Gas tumble dryer"
                                }, {
                                    "type: "MW",
                                    "description: "Microwave"
                                }, {
                                    "type: "WM",
                                    "description: "Washing machine"
                                }
                            ]
                            "productFeatures": ["NA|KAC-5|2F5I|TDE-TDE-TDE-TDE-TDE|MDD"]
                        }
                    "productFeatures": [
                        {
                            "id": "NA|KAC-5|2F5I|TDE-TDE-TDE-TDE-TDE|MDD",
                            "excess": "50",
                            "annualServiceVisitSelected": false,
                            "applianceType": "TDE-TDE-TDE-TDE-TDE",
                            "paymentMethod": "MDD"
                            "levelOfService": "2F5I"
                        }
                    ]
                }
            "errors": []
            "meta": {}
        }

+ Response 404 (application/json)

        {
            "status" : ERROR
            "data": {}
            "errors": [
                {
                    "code": "products",
                    "message": "error.client.product.notFound"
                }
            ]
            "meta": {}
        }

+ Response 500 (application/json)

        {
            "status" : ERROR
            "data": {}
            "errors": [
                {
                    "code": "paymentMethods",
                    "message": "error.client.paymentMethod.notFound"
                }
            ]
            "meta": {}
        }


##Group Product-Features

Resources related to Product-Features in the API.

## Product-Features [/product-features]

### Retrieve the level of service for a specific configuration of a product [GET /product-features/{?productId, productBundleId}]

A Product-Feature object has the following attributes:

+ productId - string
+ productBundleId - string
+ excess - string
+ annualServiceVisitSelected - Boolean
+ applianceType - string
+ paymentMethod - string
+ levelOfService - string


+ Parameters

    + productId (optional, string)
    + productBundleId (optional, string)

+ Request

    + Headers

            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

+ Response 200 (application/json)

        {
            "status" : "SUCCESS"
            "data" : [
                {
                    "product-feature" : [
                        {
                            "id": "NA|KAC-5|2F5I|TDE-TDE-TDE-TDE-TDE|MDD",
                            "excess": 50,
                            "annualServiceVisitSelected": false,
                            "applianceType": "TDE-TDE-TDE-TDE-TDE",
                            "paymentMethod": "MDD",
                            "levelOfService": "2F5I"
                        }
                    ]
                }
            "errors" : {},
            "meta" :{}
        }

        {
            "status": "SUCCESS",
            "data": [
                {
                    "productFeatures": [
                        {
                            "id": "HC400|HC400-CH|3FI1|BBC|MDD",
                            "excess": "99",
                            "annualServiceVisitSelected": true,
                            "applianceType": "BBC",
                            "paymentMethod": "MDD",
                            "levelOfService": "3FI1"
                        }
                    ]
                },
            "errors": [],
            "meta": {}
        }

+ Response 404 (application/json)

        {
            "status" : ERROR
            "data": {}
            "errors": [
                {
                    "code": "product",
                    "message": "error.client.product.notFound"
                }
            ]
            "meta": {}
        }

+ Response 404 (application/json)

        {
            "status" : ERROR
            "data": {}
            "errors": [
                {
                    "code": "bundle",
                    "message": "error.client.bundle.notFound"
                }
            ]
            "meta": {}
        }

+ Response 400 (application/json)

        {
            "status" : FAIL
            "data": {}
            "errors": [
                {
                    "code": "excess",
                    "message": "error.client.excess.invalid"
                }
            ]
            "meta": {}
        }

## Group Prices

Resources related to Prices in the API.

## Prices [/prices]

### Retrieve the price for a specific configuration of a product [GET /prices/{?productFeatureId, jci, postcode}]

A Product-Price object has the following attributes:

+ productFeatureId - string
+ totalGrossPrice - BigDecimal
+ totalNetPrice - BigDecimal
+ totalDiscounts - array
+ produtFeatureId.annualGrossPrice - BigDecimal
+ productFeatureId.annualNetPrice - BigDecimal
+ productFeatureId.discounts - array

+ Parameters

    + productFeatureId (required, string)
    + jci (required, string)
    + postcode (required, string)

+ Request

    + Headers

            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

+ Response 200 (application/json)

        {
            "status": "SUCCESS",
            "data": {
                "price": [
                    {
                        "totalGrossPrice": 260,
                        "totalNetPrice": 130,
                        "totalDiscounts": [
                            {
                                "type": "CAMPAIGN",
                                "description": "Online Summer Sales 2015",
                                "code": "CDSC",
                                "value": 25
                            },
                            {
                                "type": "PAYMENT_TYPE",
                                "description": "Direct debit discount",
                                "code": "P2SI",
                                "value": 25
                            },
                            {
                                "type": "JCI",
                                "description": "Energy Customer discount",
                                "code": "JCI",
                                "value": 12
                            }
                        ]
                    },
                ]
                "productFeaturePrices": [
                    {
                        "featureId": "HC400|HC400-CH|3FI1|BBC|MDD",
                        "annualGrossPrice": 120,
                        "annualNetPrice": 100,
                        "discounts": [
                            {
                                "type": "CAMPAIGN",
                                "description": "Online Summer Sales 2015",
                                "code": "CDSC",
                                "value": 25
                            }
                        ]
                    },
                    {
                        "featureId": "HC400|HC400-PD|2PFI|PLDR|MDD",
                        "annualGrossPrice": 260,
                        "annualNetPrice": 243,
                        "discounts": [
                            {
                                "type": "PAYMENT_TYPE",
                                "description": "Direct debit discount",
                                "code": "P2SI",
                                "value": 25
                            },
                            {
                                "type": "JCI",
                                "description": "Energy Customer discount",
                                "code": "JCI",
                                "value": 12
                            }
                        ]
                    },
                    {
                        "featureId": "HC400|HC400-HEC|HEFI|EWR|MDD",
                        "annualGrossPrice": 280,
                        "annualNetPrice": 243,
                        "discounts": []
                    }
                ]
            },
            "errors": [],
            "meta": {}
        }

        {
            "status": "FAIL",
            "data": {},
            "errors": [
                {
                    "code": "productfeature",
                    "message": "error.client.postcode.blank"
                }
            ],
            "meta": {}
        }

##Group Services-Lead

Resources related to the Services-Lead in the API.

## Services-Lead Collection [/services-lead]
### Post services sales data to Uddingston [POST /services-lead]

A Services-Lead object has the following attributes:

+ id
+ title
+ firstName
+ lastName
+ emailAddress
+ telephoneNumber
+ telephoneNumberType
+ bothAddressSame
+ supplyAddress
+ billingAddress
+ directDebitDetails
+ marketingConsentDetails
+ jciStatus
+ bundleCode
+ bundleDescription
+ bundleAnnualPrice
+ bundleMonthlyPrice
+ products

+ Request (application/json)

        {
            "servicesLead":[
                {
                    "id":null,
                    "title":"Mr",
                    "firstName":"Ravi",
                    "lastName":"Kumar",
                    "emailAddress":"ravi.kumar@britfss.co.uk",
                    "telephoneNumber":"07738998190",
                    "telephoneNumberType":null,
                    "bothAddressSame":"false",
                    "supplyAddress":[
                        {
                            "flatNumber":14,
                            "houseNumber":null,
                            "houseName":"The Rushes",
                            "addressLine1":"Wapshott Road",
                            "addressLine2":null,
                            "postalTown":"Staines",
                            "county":"Middlesex",
                            "postcode":"TW183EZ",
                            "country":null
                        }
                    ],
                    "billingAddress":[
                        {
                            "flatNumber":17,
                            "houseNumber":null,
                            "houseName":"The Rushes",
                            "addressLine1":"Wapshott Road",
                            "addressLine2":null,
                            "postalTown":"Staines",
                            "county":"Middlesex",
                            "postcode":"TW183EZ",
                            "country":null
                        }
                    ],
                    "directDebitDetails":[
                        {
                            "paymentMethod":"MDD",
                            "bankAccountNumber":"93536377",
                            "sortCode":"208122",
                            "accountHolderName":"MR R KUMAR",
                            "preferredPaymentDay":15
                        }
                    ],
                    "marketingConsentDetails":[
                        {
                            "letterOpted":false,
                            "emailOpted":true,
                            "landlineOpted":true,
                            "mobileOpted":true,
                            "smsMmsOpted":true,
                            "faceToFaceOpted":null,
                            "ivmOpted":null
                        }
                    ],
                    "jciStatus":true,
                    "bundleCode":null,
                    "bundleDescription":null,
                    "bundleAnnualPrice":null,
                    "bundleMonthlyPrice":null,
                    "products":[
                        {
                            "productName":"Kitchen Appliance Cover for 3 appliance",
                            "productCode":"KAC-3",
                            "excess":50,
                            "productAnnualPrice":72,
                            "productMonthlyPrice":6,
                            "levelOfService":"2F31",
                            "appliances":[
                                {
                                    "type":"HOE",
                                    "description":"Built-in electric hob"
                                },
                                {
                                    "type":"OVN",
                                    "description":"Built-in gas oven"
                                },
                                {
                                    "type":"FFR",
                                    "description":"Fridge-freezer"
                                }
                            ]
                        }
                    ]
                }
            ]
        }

+ Response 200 (application/json)

        {
            "status": "SUCCESS",
            "data": {},
            "errors": {},
            "meta": {}
        }

+ Response 403 (application/json)

        {
            "status": "FAIL",
            "data": {}
            "errors": [
                {
                    "code": "price",
                    "message": "error.client.price.mismatch"
                }
            ],
            "meta": {}
        }

## Group Services-Quotes

The Services-Quote resource is designed to send customer, address and product information
to the backend to create a quote object.

A Services-Quote object has the following attributes:

+ id - string
+ title - string
+ firstName - string
+ lastName - string
+ emailAddress - string
+ emailAddressType - string
+ telephoneNumber - string
+ telephoneNumberType - string
+ premiseId - string
+ bothAddressSame - Boolean
+ supplyAddress.flatNumber - string
+ supplyAddress.houseNumber - string
+ supplyAddress.houseName - string
+ supplyAddress.addressLine1 - string
+ supplyAddress.addressLine2 - string
+ supplyAddress.postalTown - string
+ supplyAddress.county - string
+ supplyAddress.postcode - string
+ supplyAddress.country - string
+ billingAddress.flatNumber - string
+ billingAddress.houseNumber - string
+ billingAddress.houseName - string
+ billingAddress.addressLine1 - string
+ billingAddress.addressLine2 - string
+ billingAddress.postalTown - string
+ billingAddress.county - string
+ billingAddress.postcode - string
+ billingAddress.country - string
+ paymentType - string
+ jci - Boolean
+ productFeatures - array

### Post a services quote to the backend systems [POST /services-quote]

+ Parameters

    + title - (required, string)
    + firstName - (required, string)
    + lastName - (required, string)
    + telephoneNumber - (required, string)
    + premiseId - (optional, string)
    + bothAddressSame - (required, Boolean)
    + supplyAddress.flatNumber - (optional, string)
    + supplyAddress.houseNumber - (optional, string)
    + supplyAddress.houseName - (optional, string)
    + supplyAddress.addressLine1 - (optional, string)
    + supplyAddress.addressLine2 - (optional, string)
    + supplyAddress.postalTown - (optional, string)
    + supplyAddress.county - (optional, string)
    + supplyAddress.postcode - (optional, string)
    + supplyAddress.country - (optional, string)
    + billingAddress.flatNumber - (optional, string)
    + billingAddress.houseNumber - (optional, string)
    + billingAddress.houseName - (optional, string)
    + billingAddress.addressLine1 - (optional, string)
    + billingAddress.addressLine2 - (optional, string)
    + billingAddress.postalTown - (optional, string)
    + billingAddress.county - (optional, string)
    + billingAddress.postcode - (optional, string)
    + billingAddress.country - (optional, string)
    + paymentType - (required, string)
    + jci - (required, Boolean)
    + productFeatures - (required, array)

+ Request

        {
            "servicesQuote":[
                {
                    "id": 356,
                    "title": "Mr",
                    "firstName": "Ravi",
                    "lastName": "Kumar",
                    "emailAddress": "ravi.kumar@britfss.co.uk",
                    "emailAddressType": null,
                    "telephoneNumber" : "07738998190",
                    "telephoneNumberType": null,
                    "premiseID": null,
                    "bothAddressSame": false,
                    "supplyAddress": [
                        {
                            "flatNumber": 14,
                            "houseNumber": null,
                            "houseName": "The Rushes",
                            "addressLine1": "Wapshott road",
                            "addressLine2": null,
                            "postalTown": "Staines",
                            "county": "Middlesex",
                            "postcode": "TW183EZ",
                            "country": null
                        }
                    ],
                    "billingAddress": [
                        {
                            "flatNumber": 17,
                            "houseNumber": null,
                            "houseName": "The Rushes",
                            "addressLine1": "Wapshott road",
                            "addressLine2": null,
                            "postalTown": "Staines",
                            "county": "Middlesex",
                            "postcode": "TW183EZ",
                            "country": null
                        }
                    ],
                    "paymentType": "MDD",
                    "jci": false,
                    "productFeatures": [
                        "HC400|HC400-CH|3FI1|BBC|MDD",
                        "HC400|HC400-PD|2PFI|PLDR|MDD",
                        "HC400|HC400-HEC|HEFI|EWR|MDD"
                    ]
            }
        }

+ Response 201 (application/json)

        {
            "status": "SUCCESS",
            "data": {
                        "id": null,
                        "title": "Mr",
                        "firstName": "Ravi",
                        "lastName": "Kumar",
                        "emailAddress": "ravi.kumar@britfss.co.uk",
                        "emailAddressType": null,
                        "telephoneNumber" : "07738998190",
                        "telephoneNumberType": null,
                        "premiseID": null,
                        "bothAddressSame": false,
                        "supplyAddress": [
                            {
                                "flatNumber": 14,
                                "houseNumber": null,
                                "houseName": "The Rushes",
                                "addressLine1": "Wapshott road",
                                "addressLine2": null,
                                "postalTown": "Staines",
                                "county": "Middlesex",
                                "postcode": "TW183EZ",
                                "country": null
                            }
                        ],
                        "billingAddress": [
                            {
                                "flatNumber": 17,
                                "houseNumber": null,
                                "houseName": "The Rushes",
                                "addressLine1": "Wapshott road",
                                "addressLine2": null,
                                "postalTown": "Staines",
                                "county": "Middlesex",
                                "postcode": "TW183EZ",
                                "country": null
                            }
                        ],
                        "paymentType": "MDD",
                        "jci": false,
                        "productFeatures": [
                            "HC400|HC400-CH|3FI1|BBC|MDD",
                            "HC400|HC400-PD|2PFI|PLDR|MDD",
                            "HC400|HC400-HEC|HEFI|EWR|MDD"
                        ]
                    },
            "errors": [],
            "meta": {}
        }

### Retrieve the status of a services quote from the backend systems [GET /services-quotes/{id}/status]

+ Parameters

    + id (required, string)

+ Request

    + Headers

            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

+ Response 200 (application/json)

+ Request

    + Headers

            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

+ Response 200 (application/json)

        {
            "status": "SUCCESS",
            "data": {
                "transactionId": "23431234",
                "status": "Checked-out",
                "servicesAccountNumber": "911000626630"
            },
            "errors": {},
            "meta": {}
        }

## Group Services-Contract

Resources related to Services-Contract in the API.

### Send marketing consent details and payment details to the backend to create services contract [POST /services-contract]

A Services-Contract object has the following attributes:

+ id - string
+ title - string
+ firstName - string
+ lastName - string
+ emailAddress - string
+ emailAddressType - string
+ telephoneNumber - string
+ telephoneNumberType - string
+ premiseId - string
+ bothAddressSame - Boolean
+ supplyAddress.flatNumber - string
+ supplyAddress.houseNumber - string
+ supplyAddress.houseName - string
+ supplyAddress.addressLine1 - string
+ supplyAddress.addressLine2 - string
+ supplyAddress.postalTown - string
+ supplyAddress.county - string
+ supplyAddress.postcode - string
+ supplyAddress.country - string
+ billingAddress.flatNumber - string
+ billingAddress.houseNumber - string
+ billingAddress.houseName - string
+ billingAddress.addressLine1 - string
+ billingAddress.addressLine2 - string
+ billingAddress.postalTown - string
+ billingAddress.county - string
+ billingAddress.postcode - string
+ billingAddress.country - string
+ paymentMethod - string
+ bankAccountNumber - string
+ sortCode - string
+ accountHolderName - string
+ preferredPaymentDay - int
+ letterOpted - Boolean
+ emailOpted - Boolean
+ landlineOpted - Boolean
+ mobileOpted - Boolean
+ smsMmsOpted - Boolean
+ faceToFaceOpted - Boolean
+ ivmOpted - Boolean
+ jci - Boolean
+ productFeatures - array
+ transactionId - string
+ status - string
+ servicesAccountNumber - string
+ legacyAccountNumber - string


+ Parameters

    + transactionId - (required, string)
    + title - (required, string)
    + firstName - (required, string)
    + lastName - (required, string)
    + telephoneNumber - (required, string)
    + emailAddress (required, string)
    + premiseId - (optional, string)
    + bothAddressSame - (required, Boolean)
    + supplyAddress.flatNumber - (optional, string)
    + supplyAddress.houseNumber - (optional, string)
    + supplyAddress.houseName - (optional, string)
    + supplyAddress.addressLine1 - (optional, string)
    + supplyAddress.addressLine2 - (optional, string)
    + supplyAddress.postalTown - (optional, string)
    + supplyAddress.county - (optional, string)
    + supplyAddress.postcode - (optional, string)
    + supplyAddress.country - (optional, string)
    + billingAddress.flatNumber - (optional, string)
    + billingAddress.houseNumber - (optional, string)
    + billingAddress.houseName - (optional, string)
    + billingAddress.addressLine1 - (optional, string)
    + billingAddress.addressLine2 - (optional, string)
    + billingAddress.postalTown - (optional, string)
    + billingAddress.county - (optional, string)
    + billingAddress.postcode - (optional, string)
    + billingAddress.country - (optional, string)
    + paymentMethod - string
    + bankAccountNumber - string
    + sortCode - string
    + accountHolderName - string
    + preferredPaymentDay - int
    + letterOpted - Boolean
    + emailOpted - Boolean
    + landlineOpted - Boolean
    + mobileOpted - Boolean
    + smsMmsOpted - Boolean
    + faceToFaceOpted - Boolean
    + ivmOpted - Boolean
    + jci - (required, Boolean)
    + productFeatures - (required, array)

+ Request

        {
            "servicesContract": [
                {
                    "id": null,
                    "transactionId": "12341123",
                    "legacyAccountNumber": null,
                    "title": "Mr",
                    "firstName": "Ravi",
                    "lastName": "Kumar",
                    "emailAddress": "ravi.kumar@britfss.co.uk",
                    "emailAddressType": null,
                    "telephoneNumber": "07738998190",
                    "telephoneNumberType": null,
                    "bothAddressSame": false,
                    "supplyAddress": [
                        {
                            "flatNumber": 14,
                            "houseNumber": null,
                            "houseName": "The Rushes",
                            "addressLine1": "Wapshott road",
                            "addressLine2": null,
                            "postalTown": "Staines",
                            "county": "Middlesex",
                            "postcode": "TW183EZ",
                            "country": null
                        }
                    ],
                    "billingAddress": [
                        {
                            "flatNumber": 17,
                            "houseNumber": null,
                            "houseName": "The Rushes",
                            "addressLine1": "Wapshott road",
                            "addressLine2": null,
                            "postalTown": "Staines",
                            "county": "Middlesex",
                            "postcode": "TW183EZ",
                            "country": null
                        }
                    ],
                    "directDebitDetails": [
                        {
                            "paymentMethod": "MDD",
                            "bankAccountNumber": "93536377",
                            "sortCode": "208122",
                            "accountHolderName": "Deepak",
                            "preferredPaymentDay": 5
                        }
                    ],
                    "marketingConsentDetails": [
                        {
                            "letterOpted": false,
                            "emailOpted": true,
                            "landlineOpted": false,
                            "mobileOpted": false,
                            "smsMmsOpted": false,
                            "facetoFaceOpted": false,
                            "ivmOpted": false
                        }
                    ],
                    "jci": false,
                    "productFeatures": [
                        "HC400|HC400-CH|3FI1|BBC|MDD",
                        "HC400|HC400-PD|2PFI|PLDR|MDD",
                        "HC400|HC400-HEC|HEFI|EWR|MDD"
                    ]
                }
            ]
        }

+ Response 201 (application/json)

        {
            "servicesContract": [
                {
                    "id": "687899732",
                    "transactionId": "12341123",
                    "legacyAccountNumber": null,
                    "title": "Mr",
                    "firstName": "Ravi",
                    "lastName": "Kumar",
                    "emailAddress": "ravi.kumar@britfss.co.uk",
                    "emailAddressType": null,
                    "telephoneNumber": "07738998190",
                    "telephoneNumberType": null,
                    "bothAddressSame": false,
                    "supplyAddress": [
                        {
                            "flatNumber": 14,
                            "houseNumber": null,
                            "houseName": "The Rushes",
                            "addressLine1": "Wapshott road",
                            "addressLine2": null,
                            "postalTown": "Staines",
                            "county": "Middlesex",
                            "postcode": "TW183EZ",
                            "country": null
                        }
                    ],
                    "billingAddress": [
                        {
                            "flatNumber": 17,
                            "houseNumber": null,
                            "houseName": "The Rushes",
                            "addressLine1": "Wapshott road",
                            "addressLine2": null,
                            "postalTown": "Staines",
                            "county": "Middlesex",
                            "postcode": "TW183EZ",
                            "country": null
                        }
                    ],
                    "directDebitDetails": [
                        {
                            "paymentMethod": "MDD",
                            "bankAccountNumber": "93536377",
                            "sortCode": "208122",
                            "accountHolderName": "Deepak",
                            "preferredPaymentDay": 5
                        }
                    ],
                    "marketingConsentDetails": [
                        {
                            "letterOpted": false,
                            "emailOpted": true,
                            "landlineOpted": false,
                            "mobileOpted": false,
                            "smsMmsOpted": false,
                            "facetoFaceOpted": false,
                            "ivmOpted": false
                        }
                    ],
                    "jci": false,
                    "productFeatures": [
                        "HC400|HC400-CH|3FI1|BBC|MDD",
                        "HC400|HC400-PD|2PFI|PLDR|MDD",
                        "HC400|HC400-HEC|HEFI|EWR|MDD"
                    ]
                }
            ]
        }

## Group API Management
## Heartbeat
Heartbeat is a controller resource and allows you to view the status of backend services. This currently supports SAP-CRM and SAP-ISU systems. Responses from this API will be returned in JSON format only.
Heartbeat as a resource represents following information:

+ status (string) - It is a concatenated value of CRM status code and ISU status code, separated by a hyphen

Status codes can have the below values:

0-Up and running

1-Cached and served from MIS

2-Down

3-Undefined

### Retrieve heartbeat [GET /heartbeat]
+ Request

  + Headers

            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

+ Response 200 (application/json)

          {
              "status": "SUCCESS",
              "data": {
                  "heartbeat": {
                      "status": "0-0"
                  }
              },
              "errors": [],
              "meta": {}
          }

+ Response 404 (application/json)

          {
              "status": "FAIL",
              "data": {},
              "errors": {
                  "heartbeat": "error.configuration.data.notfound"
              },
              "meta": {}
          }



##Group Premises
Premises resource allow you to retrieve the customer account information based on their premises. In order to retrieve the the account information based on premises, client should have authorization access token

## Premises Collection [/premises]
### Retrieve all premises [GET /premises]
+ Request (application/json)

  + Headers

            Authorization: Bearer accesstoken
            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

+ Response 200 (application/json)

          {
              "status": "SUCCESS",
              "data": {
                  "premises": [
                      {
                          "id": "NjM4MDE2MTky",
                          "accounts": [
                              "851001347259"
                          ],
                          "address": "Uxbridge Court, Uxbridge Road, Kingston upon Thames, SURREY, KT1 2LJ",
                          "houseNumber": "",
                          "flatNumber": null,
                          "houseName": "Uxbridge Court",
                          "addressLine1": "Uxbridge Road",
                          "addressLine2": "",
                          "postalTown": "Kingston upon Thames",
                          "county": "SURREY",
                          "postcode": "KT1 2LJ",
                          "MPAN": "1900034021774",
                          "MPRN": null,
                          "smartUpgradeEligibile": true
                          "smartMeterEligibility": [
                            {
                                "accountNumber": "851001347259",
                                "qualificationStatusID": "1",
                                "targetability": "",
                                "sectorAvailability": "ON",
                                "inEligibleReasons": [
                                    {
                                        "reasonCode": "7",
                                        "reasonDescription": "Customer has an IGT Gas Meter"
                                    }
                                ]
                            }
                        ]
                    }
                ]
            },
            "errors": [],
            "meta": {}
        }

+ Response 401 (application/json)

          {
              "status": "FAIL",
              "data": {},
              "errors": [
                  {
                      "code": "authorize",
                      "message": "access_denied"
                  }
              ],
              "meta": {}
          }


+ Response 500 (application/json)

          {
              "status": "ERROR",
              "data": {},
              "errors": [
                  {
                      "code": "server.error.internal",
                      "message": "An internal error while processing request."
                  }
              ],
              "meta": {}
          }


## Group Meters
Meters endpoint allows you to list / view all the meters of the logged in customer. Responses from this endpoint will be retuned in JSON format only.

## Meters Collection
Meter as a resource represents following information:

+ id (string) - It is a combination of account number, contract number and encoded serial number of the meter, is considered as the unique identifier.
+ numberOfRegisters (number) - Indicates the number of registers available for the meter.
+ meterPointId (string) - Meter point identifier number of the meter, if available.
+ assetNumber (string) - Asset number of the meter, if available.
+ serialNumber (string) - Serial number of the meter, if available.
+ meterId (string) - Meter identifier of the meter, if available.
+ meterType (string) - Meter type can be gas, elecsr, elec2r or elecTou.
+ account (string) - Account number to which the meter is linked, if available.
+ contractType (string) - Contract type can be either Gas or Electricity.
+ contractNumber (string) - Contract number to which the meter is linked, if available.
+ complexityCode (string) - Complexity code of the meter, if available.
+ smartMeter (boolean) - Indicates the meter as a smart meter if the value is true.
+ complexMeter (boolean) - Indicates the meter as a complex meter if the value is true.
+ registers (Array of Register) - Registers associated with the meter.

# Registers

+ id (string) - Concatenated account number, contract number, meter serial number and register number of the register, separated by '-', is considered as the unique identifier
+ numberOfDials (string) - Indicates the number of dials available for the register.
+ registerNumber (string) - Register number, if available.
+ registerName (string) - Name of the register, if available.
+ usageType (string) - Usage type of the register, if available.
+ readingType (string) - Last reading type code, if available.
+ readingDate (string) - Last reading date in dd/MM/yyyy format, if available.
+ reading (string) - Last reading, if available.
+ meterReadType (string) - Meter reading type description, if available.
+ readingClassification (string) - Meter reading classification description, it mentions whether the reading is "Actual" or "Estimated", if available.
+ nonCyclicToleranceFlag (string) - Non cyclic tolerance flag, if available.
+ validationFailureCode (string) - Validation Failure Code, if available.

### Retrieve meter for specific account(s) [GET /meters{?accountNumber*}]

+ Parameters

  + accountNumber (number) ...This is the customers account number

+ Request

  + Headers

          Authorization: Bearer accesstoken
          cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

+ Response 200 (application/json)


          {
              "status": "SUCCESS",
              "data": {
                  "meters": [
                      {
                          "numberOfRegisters": 1,
                          "meterPointId": "1343152901",
                          "assetNumber": "000000000010376382",
                          "serialNumber": "G4A02208680401",
                          "meterType": "gas",
                          "smartMeter": false,
                          "id": "850000367878-0550013531-RzRBMDIyMDg2ODA0MDE",
                          "meterId": "3550020532",
                          "complexMeter": false,
                          "registers": [
                              {
                                  "id": "850000367878-0550013531-RzRBMDIyMDg2ODA0MDE-001",
                                  "numberOfDials": 5,
                                  "readingClassification": "Actual",
                                  "reading": "03287",
                                  "readingDate": "19/11/2013",
                                  "meterReadType": "DayRead",
                                  "nonCyclicToleranceFlag": "",
                                  "validationFailureCode": "",
                                  "usageType": "single",
                                  "readingType": "1801",
                                  "registerName": "Day",
                                  "registerNumber": "001"
                              }
                          ],
                          "contractType": "Gas",
                          "account": "850000367878",
                          "complexityCode": "0",
                          "contractNumber": "0550013531"
                      },
                      {
                          "numberOfRegisters": 1,
                          "meterPointId": "1591031295962",
                          "assetNumber": "000000000011291701",
                          "serialNumber": "C62L06322",
                          "meterType": "elecsr",
                          "smartMeter": false,
                          "id": "850000367878-2076700195-QzYyTDA2MzIy",
                          "meterId": "3655023137",
                          "complexMeter": false,
                          "registers": [
                              {
                                  "id": "850000367878-2076700195-QzYyTDA2MzIy-001",
                                  "numberOfDials": 5,
                                  "readingClassification": "Actual",
                                  "reading": "21768",
                                  "readingDate": "19/11/2013",
                                  "meterReadType": "DayRead",
                                  "nonCyclicToleranceFlag": "",
                                  "validationFailureCode": "",
                                  "usageType": "single",
                                  "readingType": "1801",
                                  "registerName": "Standard",
                                  "registerNumber": "001"
                              }
                          ],
                          "contractType": "Electricity",
                          "account": "850000367878",
                          "complexityCode": "0",
                          "contractNumber": "2076700195"
                      }
                  ]
              },
              "errors": {},
              "meta": {}
          }

+ Response 401 (application/json)

          {
              "status": "FAIL",
              "data": {},
              "errors": [
                  {
                      "code": "authorize",
                      "message": "access_denied"
                  }
              ],
              "meta": {}
          }

+ Response 400 (application/json)

          {
              "status": "FAIL",
              "data": {},
              "errors": [
                  {
                      "code": "accountNumber",
                      "message": "error.client.accountNumber.invalid"
                  }
              ],
              "meta": {}
          }

+ Response 401 (application/json)

          {
              "status": "FAIL",
              "data": {},
              "errors": [
                  {
                       "code": "accountNumber",
                      "message": "error.client.accountNumber.invalid"

                  }
              ],
              "meta": {}
          }

### Retrieve meter using meter identifier [GET /meters/{meterIdentifier}]

+ Parameters

  + meterIdentifier (number) ...This is the customers account number

+ Request (application/json)

  + Headers

            Authorization: Bearer accesstoken
            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

+ Response 200 (application/json)

          {
              "status": "SUCCESS",
              "data": {
                  "meter": {
                      "numberOfRegisters": 1,
                      "meterPointId": "1343152901",
                      "assetNumber": "000000000010376382",
                      "serialNumber": "G4A02208680401",
                      "meterType": "gas",
                      "smartMeter": false,
                      "id": "850000367878-0550013531-RzRBMDIyMDg2ODA0MDE",
                      "meterId": "3550020532",
                      "complexMeter": false,
                      "registers": [
                          {
                              "id": "850000367878-0550013531-RzRBMDIyMDg2ODA0MDE-001",
                              "numberOfDials": 5,
                              "readingClassification": "Actual",
                              "reading": "03287",
                              "readingDate": "19/11/2013",
                              "meterReadType": "DayRead",
                              "nonCyclicToleranceFlag": "",
                              "validationFailureCode": "",
                              "usageType": "single",
                              "readingType": "1801",
                              "registerName": "Day",
                              "registerNumber": "001"
                          }
                      ],
                      "contractType": "Gas",
                      "account": "850000367878",
                      "complexityCode": "0",
                      "contractNumber": "0550013531"
                  }
              },
              "errors": {},
              "meta": {}
          }

+ Response 401 (application/json)

          {
              "status": "FAIL",
              "data": {},
              "errors": [
                  {
                      "code": "authorize",
                      "message": "access_denied"
                  }
              ],
              "meta": {}
          }

+ Response 400 (application/json)

          {
              "status": "FAIL",
              "data": {},
              "errors": [
                  {
                      "code": "meterIdentifier",
                      "message": "error.client.meterIdentifier.invalid"
                  }
              ],
              "meta": {}
          }

+ Response 404 (application/json)

          {
              "status": "FAIL",
              "data": {},
              "errors": [
                  {
                      "code": "serialNumber",
                      "message": "error.meter.notFound"
                  }
              ],
              "meta": {}
          }

### Validate Meter read [GET /meters/{meterIdentifier}/reading/validation{?registerNumber,reading}]

+ Parameters

  + meterIdentifier (string) ...Concatenated account number, contract number and encoded serial number of the meter which the reading is taken, Should not be null or empty.
  + registerNumber (string) ...Register number for which the reading is taken, Should not be null or empty
  + reading (string) ...Should not be null or empty. Should be number and max 6 digits

+ Request (application/json)

  + Headers

            Authorization: Bearer accesstoken
            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

+ Response 200 (application/json)

          {
              "status": "SUCCESS",
              "data": {
                  "isValidationFailure": false,
                  "isOutOfTolerantReading": false
              },
              "errors": [],
              "meta": {}
          }

+ Response 401 (application/json)

          {
              "status": "FAIL",
              "data": {},
              "errors": [
                  {
                      "code": "authorize",
                      "message": "access_denied"
                  }
              ],
              "meta": {}
          }

+ Response 401 (application/json)

          {
              "status": "FAIL",
              "data": {},
              "errors": [
                  {
                      "code": "accountNumber",
                      "message": "error.client.accountNumber.invalid"
                  }
              ],
              "meta": {}
          }

+ Response 404 (application/json)

          {
              "status": "FAIL",
              "data": {},
              "errors": [
                  {
                      "code": "register",
                      "message": "error.register.notFound"
                  }
              ],
              "meta": {}
          }

+ Response 400 (application/json)

          {
              "status": "FAIL",
              "data": {},
              "errors": [
                  {
                      "code": "registerNumber",
                      "message": "error.client.registerNumber.blank"
                  }
              ],
              "meta": {}
          }

+ Response 200 (application/json)

          {
              "status": "SUCCESS",
              "data": {
                  "isValidationFailure": true,
                  "isOutOfTolerantReading": false
              },
              "errors": [],
              "meta": {}
          }

### Check Meter ownership [POST /meters/ownership-check]

+ Request (application/json)

  + Headers

            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

  + Body

            {
                "mpxn": "201234567890"
            }

+ Response 200 (application/json)

          {
              "status": "SUCCESS",
              "data": {
                  "bgOwned": true,
                  "PodExtUi": "201234567890"
              },
              "errors": {},
              "meta": {}
          }

+ Response 400 (application/json)

          {
              "status": "FAIL",
              "data": {},
              "errors": [
                  {
                      "code": "mpxn",
                      "message": "error.client.mpxn.blank"
                  }
              ],
              "meta": {}
          }

+ Response 404 (application/json)

          {
              "status": "ERROR",
              "data": {},
              "errors": [
                  {
                      "code": "meter",
                      "message": "error.meter.notFound"
                  }
              ],
              "meta": {}
          }

+ Response 404 (application/json)

          {
              "status": "ERROR",
              "data": {},
              "errors": [
                  {
                      "code": "meter",
                      "message": "error.meter.notFound"
                  }
              ],
              "meta": {}
          }

## Group Leads
Leads resource allows you to retrieve, create and update lead, as of now it supports "Home Move" leads only. Responses from this API will be returned in JSON format only.

## Leads Collection

+ id (string) -  Lead ID created in Online DB and submitted to Kana Queue.
+ leadType (string) -  Identifies the type of lead, currently supports only "homeMove".
+ accountNumbers (string) -  Account numbers associated with the address which is selected for home move, comma separated if multiple values are available
+ mobileNumber (string) -  Mobile number of the customer, if available.
+ moveOutDate (string) -  Date when the customer have moved out of the address, in dd/MM/yyyy format.
+ moveOutGasReading (string) -  Gas meter reading taken at the moved out address.
+ moveOutElectricityDayReading (string) -  Electricity day meter reading taken at the moved out address.
+ moveOutElectricityNightReading (string) -  Electricity night meter reading taken at the moved out address.
+ moveInDate (string) -  Date when the customer is moving in to the new address, in dd/MM/yyyy format.
+ moveInBillResponsible (boolean) -  Sets to true if customer is responsible for the bill at the moving in address, else this value is set to false.
+ optOutReason (string) -  Reason given by customer when they are not taking both Gas and electricity account to the new address.
+ moveInGasReading (string) -  Gas meter reading taken at the moving in address.
+ moveInElectricityDayReading (string) -  Electricity day meter reading taken at the moving in address.
+ moveInElectricityNightReading (string) -  Electricity night meter reading taken at the moving in address.
+ moveInGasAccount (boolean) -  Set to true if the gas account is moved to the new address.
+ moveInElectricityAccount(boolean) -  Set to true if the electricity account is moved to the new address.
+ moveInHomeServiceAccount (boolean) -  Set to true if the services account is moved to the new address.
+ serviceProductAvailable (string) -  Set to 'Available' or 'Unavailable' or blank based on whether the customer have services product.
+ moveInFlatNumber (string) -  Flat number of the moving in address, if available.
+ moveInHouseNumber (string) -  House number of the moving in address, if available.
+ moveInHouseName (string) -  House name of the moving in address, if available.
+ moveInAddressLine1 (string) -  Moving in address line 1. Typically contains building name / street etc...
+ moveInAddressLine2 (string) -  Moving in address line 2. Typically contains street / avenues etc...
+ moveInPostalTown (string) -  Postal town of the moving in address.
+ moveInCounty (string) -  County to which the moving in address belongs.
+ moveInPostcode (string) -  Postcode of the moving in address.
+ moveInMpan (string) -  MPAN of the moving in address.
+ moveInMprn (string) -  MPRN of the moving in address.
+ selectedProposition (string) -  The proposition selected by the customer, currently supports 'GAK', 'CI', 'ECO', 'None' and blank.
+ status (string) -  The status of the lead, currently supports 'Complete', 'All Reading Pending', 'Move Out Reading Pending', 'Move In Reading Pending' and blank.
+ expiryDate (string) -  The expiry date of the lead, in dd/MM/yyyy format.
+ createdDate (string) -  The date of creation of the lead, in dd/MM/yyyy format.
+ moveOutEconomySevenMeter (string) -  Value will be 'true' if the electricity meter is economy seven in move out address, else value will be 'false'. Value can be blank if it is not defined while creating the lead.
+ moveInEconomySevenMeter (string) -  Value will be 'true' if the electricity meter is economy seven in move in address, else value will be 'false'. Value can be blank if it is not defined while creating the lead.
+ category (string) -  Category can have values - 'expired', 'processed', 'in-flight', 'submitted' or 'unknown'.
+ gasDirectDebitAmount (number) -  Gas Direct Debit amount to be set for the new property.
+ electricityDirectDebitAmount (number) -  Electricity Direct Debit amount to be set for the new property.
+ propertyType (string) -  Property type used for consumption calculation for new property .
+ noOfBedrooms (string) -  Number of bedrooms used for consumption calculation for new property .
+ noOfPeople (string) -  Number of people used for consumption calculation for new property .
+ electricityUsageType (string) -  Electricity usage type used for consumption calculation for new property .
+ houseAge (string) -  House age used for consumption calculation for new property .
+ roomHeating (string) -  Room heating method used for consumption calculation for new property .
+ boilerType (string) -  Boiler type used for consumption calculation for new property .
+ waterHeating (string) -  Water heating method used for consumption calculation for new property .
+ boilerAge (string) -  Boiler age used for consumption calculation for new property .
+ consumptionEstimated (boolean) -  'true' if consumption calculated for new property else 'false'.
+ gasConsumptionValue (number) -  Gas consumption value calculated for new property .
+ electricityConsumptionValue (number) -  Electricity consumption value calculated for new property .
+ gasTariff (string) -  Gas tariff selected for new property .
+ electricityTariff (string) -  Electricity tariff selected for new property .

### Retrieve Leads for an account [GET /leads{?accountNumber*}]
+ Request (application/json)

  + Headers

            Authorization: Bearer accesstoken
            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

+ Response 200 (application/json)

          {
              "status": "SUCCESS",
              "data": {
                  "leads": [
                      {
                          "id": "1000176612",
                          "leadType": "homeMove",
                          "accountNumbers": "851001347653",
                          "mobileNumber": "07412312345",
                          "moveOutDate": "10/03/2015",
                          "moveOutGasReading": "123",
                          "moveOutElectricityDayReading": "456",
                          "moveOutElectricityNightReading": "789",
                          "moveInDate": "10/03/2015",
                          "moveInBillResponsible": false,
                          "optOutReason": null,
                          "moveInGasReading": "123",
                          "moveInElectricityDayReading": "234",
                          "moveInElectricityNightReading": "555",
                          "moveInGasAccount": true,
                          "moveInElectricityAccount": false,
                          "moveInHomeServiceAccount": true,
                          "serviceProductAvailability": "Available",
                          "moveInFlatNumber": null,
                          "moveInHouseNumber": "51",
                          "moveInHouseName": "Astley Way",
                          "moveInAddressLine1": "Manor Ash Garden",
                          "moveInAddressLine2": "Ashby-De-La_Zouch",
                          "moveInPostalTown": "Ashby-De-La_Zouch",
                          "moveInCounty": "Leicestershire",
                          "moveInPostcode": "LE65 1LY",
                          "moveInMpan": "201234567890",
                          "moveInMprn": null,
                          "selectedProposition": null,
                          "status": "Complete",
                          "expiryDate": "28/07/2015",
                          "moveOutEconomySevenMeter": "true",
                          "moveInEconomySevenMeter": "true",
                          "createdDate": "14/07/2015",
                          "category": "processed",
                          "gasDirectDebitAmount": 12,
                          "electricityDirectDebitAmount": 15,
                          "propertyType": "PROP_FLAT",
                          "noOfBedrooms": "2",
                          "noOfPeople": "3",
                          "electricityUsageType": "USG_EL_MED",
                          "houseAge": "BUILT_A3",
                          "roomHeating": "RH_GAS_CENTRAL",
                          "boilerType": "BOILER_REG",
                          "waterHeating": "WATER_GS",
                          "boilerAge": "BOILER_OLD",
                          "consumptionEstimated": true,
                          "gasConsumptionValue": 80,
                          "electricityConsumptionValue": 90,
                          "gasTariff": "Gas Standard",
                          "electricityTariff": null
                      },
                      {
                          "id": "1000176608",
                          "leadType": "homeMove",
                          "accountNumbers": "851001347653",
                          "mobileNumber": "07412312345",
                          "moveOutDate": "10/03/2015",
                          "moveOutGasReading": "123",
                          "moveOutElectricityDayReading": "456",
                          "moveOutElectricityNightReading": "789",
                          "moveInDate": "10/03/2015",
                          "moveInBillResponsible": false,
                          "optOutReason": null,
                          "moveInGasReading": "123",
                          "moveInElectricityDayReading": "234",
                          "moveInElectricityNightReading": "555",
                          "moveInGasAccount": true,
                          "moveInElectricityAccount": false,
                          "moveInHomeServiceAccount": true,
                          "serviceProductAvailability": "Available",
                          "moveInFlatNumber": null,
                          "moveInHouseNumber": "51",
                          "moveInHouseName": "Astley Way",
                          "moveInAddressLine1": "Manor Ash Garden",
                          "moveInAddressLine2": "Ashby-De-La_Zouch",
                          "moveInPostalTown": "Ashby-De-La_Zouch",
                          "moveInCounty": "Leicestershire",
                          "moveInPostcode": "LE65 1LY",
                          "moveInMpan": "201234567890",
                          "moveInMprn": "200987654321",
                          "selectedProposition": null,
                          "status": "Complete",
                          "expiryDate": "28/07/2015",
                          "moveOutEconomySevenMeter": "true",
                          "moveInEconomySevenMeter": "true",
                          "createdDate": "14/07/2015",
                          "category": "processed",
                          "gasDirectDebitAmount": 12,
                          "electricityDirectDebitAmount": 15,
                          "propertyType": "PROP_FLAT",
                          "noOfBedrooms": "2",
                          "noOfPeople": "3",
                          "electricityUsageType": "USG_EL_MED",
                          "houseAge": "BUILT_A3",
                          "roomHeating": "RH_GAS_CENTRAL",
                          "boilerType": "BOILER_REG",
                          "waterHeating": "WATER_GS",
                          "boilerAge": "BOILER_OLD",
                          "consumptionEstimated": true,
                          "gasConsumptionValue": 80,
                          "electricityConsumptionValue": 90,
                          "gasTariff": "Gas Standard",
                          "electricityTariff": "Electricity Standard"
                      }
                  ]
              },
              "errors": [],
              "meta": {}
          }

### Retrieve lead [GET /leads/{leadId}]
+ Request (application/json)

  + Headers

            Authorization: Bearer accesstoken
            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

+ Response 200 (application/json)

          {
              "status": "SUCCESS",
              "data": {
                  "lead": {
                      "id": "1000176608",
                      "leadType": "homeMove",
                      "accountNumbers": "851001347653",
                      "mobileNumber": "07412312345",
                      "moveOutDate": "10/03/2015",
                      "moveOutGasReading": "123",
                      "moveOutElectricityDayReading": "456",
                      "moveOutElectricityNightReading": "789",
                      "moveInDate": "10/03/2015",
                      "moveInBillResponsible": false,
                      "optOutReason": null,
                      "moveInGasReading": "123",
                      "moveInElectricityDayReading": "234",
                      "moveInElectricityNightReading": "555",
                      "moveInGasAccount": true,
                      "moveInElectricityAccount": false,
                      "moveInHomeServiceAccount": true,
                      "serviceProductAvailability": "Available",
                      "moveInFlatNumber": null,
                      "moveInHouseNumber": "51",
                      "moveInHouseName": "Astley Way",
                      "moveInAddressLine1": "Manor Ash Garden",
                      "moveInAddressLine2": "Ashby-De-La_Zouch",
                      "moveInPostalTown": "Ashby-De-La_Zouch",
                      "moveInCounty": "Leicestershire",
                      "moveInPostcode": "LE65 1LY",
                      "moveInMpan": "201234567890",
                      "moveInMprn": "200987654321",
                      "selectedProposition": null,
                      "status": "Complete",
                      "expiryDate": "28/07/2015",
                      "moveOutEconomySevenMeter": "true",
                      "moveInEconomySevenMeter": "true",
                      "createdDate": "14/07/2015",
                      "category": "processed",
                      "gasDirectDebitAmount": 12,
                      "electricityDirectDebitAmount": 15,
                      "propertyType": "PROP_FLAT",
                      "noOfBedrooms": "2",
                      "noOfPeople": "3",
                      "electricityUsageType": "USG_EL_MED",
                      "houseAge": "BUILT_A3",
                      "roomHeating": "RH_GAS_CENTRAL",
                      "boilerType": "BOILER_REG",
                      "waterHeating": "WATER_GS",
                      "boilerAge": "BOILER_OLD",
                      "consumptionEstimated": true,
                      "gasConsumptionValue": 80,
                      "electricityConsumptionValue": 90,
                      "gasTariff": "Gas Standard",
                      "electricityTariff": "Electricity Standard"
                  }
              },
              "errors": [],
              "meta": {}
          }

### Create a lead [POST /leads]

+ Request (application/json)

  + Headers

            Authorization: Bearer accesstoken
            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

  + Body

            {
                "lead": {
                    "id": null,
                    "leadType": "homeMove",
                    "accountNumbers": "851001347653",
                    "mobileNumber": "07412312345",
                    "moveOutDate": "10/03/2015",
                    "moveOutGasReading": "123",
                    "moveOutElectricityDayReading": "456",
                    "moveOutElectricityNightReading": "789",
                    "moveInDate": "10/03/2015",
                    "moveInBillResponsible": false,
                    "optOutReason": null,
                    "moveInGasReading": "123",
                    "moveInElectricityDayReading": "234",
                    "moveInElectricityNightReading": "555",
                    "moveInGasAccount": true,
                    "moveInElectricityAccount": false,
                    "moveInHomeServiceAccount": true,
                    "serviceProductAvailability": "Available",
                    "moveInFlatNumber": null,
                    "moveInHouseNumber": "51",
                    "moveInHouseName": "Astley Way",
                    "moveInAddressLine1": "Manor Ash Garden",
                    "moveInAddressLine2": "Ashby-De-La_Zouch",
                    "moveInPostalTown": "Ashby-De-La_Zouch",
                    "moveInCounty": "Leicestershire",
                    "moveInPostcode": "LE65 1LY",
                    "moveInMpan": "201234567890",
                    "moveInMprn": "200987654321",
                    "selectedProposition": null,
                    "status": "Complete",
                    "expiryDate": "27/05/2015",
                    "moveOutEconomySevenMeter": "true",
                    "moveInEconomySevenMeter": "true",
                    "createdDate": "13/05/2015",
                    "category": "processed",
                    "gasDirectDebitAmount": 12,
                    "electricityDirectDebitAmount": 15,
                    "propertyType": "PROP_FLAT",
                    "noOfBedrooms": "2",
                    "noOfPeople": "3",
                    "electricityUsageType": "USG_EL_MED",
                    "houseAge": "BUILT_A3",
                    "roomHeating": "RH_GAS_CENTRAL",
                    "boilerType": "BOILER_REG",
                    "waterHeating": "WATER_GS",
                    "boilerAge": "BOILER_OLD",
                    "consumptionEstimated": true,
                    "gasConsumptionValue": 80,
                    "electricityConsumptionValue": 90,
                    "gasTariff": "Gas Standard",
                    "electricityTariff": "Electricity Standard"
                }
            }

+ Response 200 (application/json)

          {
              "status": "SUCCESS",
              "data": {
                  "lead": {
                      "id": "1000176608",
                      "leadType": "homeMove",
                      "accountNumbers": "851001347653",
                      "mobileNumber": "07412312345",
                      "moveOutDate": "10/03/2015",
                      "moveOutGasReading": "123",
                      "moveOutElectricityDayReading": "456",
                      "moveOutElectricityNightReading": "789",
                      "moveInDate": "10/03/2015",
                      "moveInBillResponsible": false,
                      "optOutReason": null,
                      "moveInGasReading": "123",
                      "moveInElectricityDayReading": "234",
                      "moveInElectricityNightReading": "555",
                      "moveInGasAccount": true,
                      "moveInElectricityAccount": false,
                      "moveInHomeServiceAccount": true,
                      "serviceProductAvailability": "Available",
                      "moveInFlatNumber": null,
                      "moveInHouseNumber": "51",
                      "moveInHouseName": "Astley Way",
                      "moveInAddressLine1": "Manor Ash Garden",
                      "moveInAddressLine2": "Ashby-De-La_Zouch",
                      "moveInPostalTown": "Ashby-De-La_Zouch",
                      "moveInCounty": "Leicestershire",
                      "moveInPostcode": "LE65 1LY",
                      "moveInMpan": "201234567890",
                      "moveInMprn": "200987654321",
                      "selectedProposition": null,
                      "status": "Complete",
                      "expiryDate": "28/07/2015",
                      "moveOutEconomySevenMeter": "true",
                      "moveInEconomySevenMeter": "true",
                      "createdDate": "14/07/2015",
                      "category": "processed",
                      "gasDirectDebitAmount": 12,
                      "electricityDirectDebitAmount": 15,
                      "propertyType": "PROP_FLAT",
                      "noOfBedrooms": "2",
                      "noOfPeople": "3",
                      "electricityUsageType": "USG_EL_MED",
                      "houseAge": "BUILT_A3",
                      "roomHeating": "RH_GAS_CENTRAL",
                      "boilerType": "BOILER_REG",
                      "waterHeating": "WATER_GS",
                      "boilerAge": "BOILER_OLD",
                      "consumptionEstimated": true,
                      "gasConsumptionValue": 80,
                      "electricityConsumptionValue": 90,
                      "gasTariff": "Gas Standard",
                      "electricityTariff": "Electricity Standard"
                  }
              },
              "errors": [],
              "meta": {}
          }

+ Response 400 (application/json)

          {
              "status": "FAIL",
              "data": {},
              "errors": {
                  "postcode": "error.client.postcode.invalid"
              },
              "meta": {}
          }

+ Response 401 (application/json)

          {
              "status": "FAIL",
              "data": {},
              "errors": {
                  "authorize": "invalid_request"
              },
              "meta": {}
          }

+ Response 401 (application/json)

          {
              "status": "ERROR",
              "data": {},
              "errors": {
                  "accountNumber": "error.client.accountNumber.invalid"
              },
              "meta": {}
          }

+ Response 401 (application/json)

            {
                "status": "ERROR",
                "data": {},
                "errors": {
                    "accountNumber": "error.client.accountNumber.invalid"
                },
                "meta": {}
            }

### Update a lead [PUT /leads/{leadId}]

+ Request (application/json)

  + Headers

            Authorization: Bearer accesstoken
            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

  + Body

            {
                "lead": {
                    "id": null,
                    "leadType": "homeMove",
                    "accountNumbers": "851001347653",
                    "mobileNumber": "07412312345",
                    "moveOutDate": "10/03/2015",
                    "moveOutGasReading": "123",
                    "moveOutElectricityDayReading": "456",
                    "moveOutElectricityNightReading": "789",
                    "moveInDate": "10/03/2015",
                    "moveInBillResponsible": false,
                    "optOutReason": null,
                    "moveInGasReading": "123",
                    "moveInElectricityDayReading": "234",
                    "moveInElectricityNightReading": "555",
                    "moveInGasAccount": true,
                    "moveInElectricityAccount": false,
                    "moveInHomeServiceAccount": true,
                    "serviceProductAvailability": "Available",
                    "moveInFlatNumber": null,
                    "moveInHouseNumber": "51",
                    "moveInHouseName": "Astley Way",
                    "moveInAddressLine1": "Manor Ash Garden",
                    "moveInAddressLine2": "Ashby-De-La_Zouch",
                    "moveInPostalTown": "Ashby-De-La_Zouch",
                    "moveInCounty": "Leicestershire",
                    "moveInPostcode": "LE65 1LY",
                    "moveInMpan": "201234567890",
                    "moveInMprn": "200987654321",
                    "selectedProposition": null,
                    "status": "Complete",
                    "expiryDate": "27/05/2015",
                    "moveOutEconomySevenMeter": "true",
                    "moveInEconomySevenMeter": "true",
                    "createdDate": "13/05/2015",
                    "category": "processed",
                    "gasDirectDebitAmount": 12,
                    "electricityDirectDebitAmount": 15,
                    "propertyType": "PROP_FLAT",
                    "noOfBedrooms": "2",
                    "noOfPeople": "3",
                    "electricityUsageType": "USG_EL_MED",
                    "houseAge": "BUILT_A3",
                    "roomHeating": "RH_GAS_CENTRAL",
                    "boilerType": "BOILER_REG",
                    "waterHeating": "WATER_GS",
                    "boilerAge": "BOILER_OLD",
                    "consumptionEstimated": true,
                    "gasConsumptionValue": 80,
                    "electricityConsumptionValue": 90,
                    "gasTariff": "Gas Standard",
                    "electricityTariff": "Electricity Standard"
                }
            }

+ Response 200 (application/json)

            {
                "status": "SUCCESS",
                "data": {
                    "lead": {
                      "id": "1000176608",
                      "leadType": "homeMove",
                      "accountNumbers": "851001347653",
                      "mobileNumber": "07412312345",
                      "moveOutDate": "10/03/2015",
                      "moveOutGasReading": "123",
                      "moveOutElectricityDayReading": "456",
                      "moveOutElectricityNightReading": "789",
                      "moveInDate": "10/03/2015",
                      "moveInBillResponsible": false,
                      "optOutReason": null,
                      "moveInGasReading": "123",
                      "moveInElectricityDayReading": "234",
                      "moveInElectricityNightReading": "555",
                      "moveInGasAccount": true,
                      "moveInElectricityAccount": false,
                      "moveInHomeServiceAccount": true,
                      "serviceProductAvailability": "Available",
                      "moveInFlatNumber": null,
                      "moveInHouseNumber": "51",
                      "moveInHouseName": "Astley Way",
                      "moveInAddressLine1": "Manor Ash Garden",
                      "moveInAddressLine2": "Ashby-De-La_Zouch",
                      "moveInPostalTown": "Ashby-De-La_Zouch",
                      "moveInCounty": "Leicestershire",
                      "moveInPostcode": "LE65 1LY",
                      "moveInMpan": "201234567890",
                      "moveInMprn": "200987654321",
                      "selectedProposition": null,
                      "status": "Complete",
                      "expiryDate": "28/07/2015",
                      "moveOutEconomySevenMeter": "true",
                      "moveInEconomySevenMeter": "true",
                      "createdDate": "14/07/2015",
                      "category": "processed",
                      "gasDirectDebitAmount": 12,
                      "electricityDirectDebitAmount": 15,
                      "propertyType": "PROP_FLAT",
                      "noOfBedrooms": "2",
                      "noOfPeople": "3",
                      "electricityUsageType": "USG_EL_MED",
                      "houseAge": "BUILT_A3",
                      "roomHeating": "RH_GAS_CENTRAL",
                      "boilerType": "BOILER_REG",
                      "waterHeating": "WATER_GS",
                      "boilerAge": "BOILER_OLD",
                      "consumptionEstimated": true,
                      "gasConsumptionValue": 80,
                      "electricityConsumptionValue": 90,
                      "gasTariff": "Gas Standard",
                      "electricityTariff": "Electricity Standard"
                  }
              },
              "errors": [],
              "meta": {}
            }

+ Response 400 (application/json)

          {
              "status": "FAIL",
              "data": {},
              "errors": {
                  "postcode": "error.client.postcode.invalid"
              },
              "meta": {}
          }

+ Response 401 (application/json)

          {
              "status": "FAIL",
              "data": {},
              "errors": {
                  "authorize": "invalid_request"
              },
              "meta": {}
          }

+ Response 401 (application/json)

          {
              "status": "ERROR",
              "data": {},
              "errors": {
                  "accountNumber": "error.client.accountNumber.invalid"
              },
              "meta": {}
          }

+ Response 401 (application/json)

          {
              "status": "ERROR",
              "data": {},
              "errors": {
                  "accountNumber": "error.client.accountNumber.invalid"
              },
              "meta": {}
          }


## Group Loyalties
Loyalties resource allows you to create a loyalty card for a customer. Responses from this API will be retuned in JSON format only.

## Loyalties Collection [/loyalties]

Loyalty as a resource represents following information. This is equivalent of a nectar card supplied to the customer

+ id (string) - Loyalty card number associated to the customer.
+ title (string) - Title of the customer registering for Loyalty card.
+ firstName (string) - First name of the customer registering for Loyalty card.
+ surname (string) - Surname of the customer registering for Loyalty card.
+ telephoneNumber (string) - Telephone number of the customer registering for Loyalty card.
+ flatNumber (string) - Flat number of the address if available
+ houseNumber (string) - House number of the address if available.
+ houseName (string) - House name of the address if available.
+ addressLine1 (string) - Address line 1. Typically contains building name / street etc...
+ addressLine2 (string) - Address line 2. Typically contains street / avenues etc...
+ postalTown (string) - Postal town of the address.
+ county (string) - County to which the address belongs.
+ postcode (string) - Postcode of the address
+ emailAddress (string) - Email address of the customer attempting to register for a Loyalty card.

Loyalties API is not brand agnostic. Each customer attempting to create a new loyalty card is associated with the brand. However this does not restrict the card to the current brand. Possible list of brands are listed below for reference.

britishgas - Brand association with British Gas
sainsbury - Brand association with Sainsbury's Energy
mobileenergy - Brand association with Mobile Energy
This brand information will be derived from CID. So it is not required to pass this information in the request to create a Loyalty card.

### Create loyalty card [POST /loyalties]
+ Request (application/json)

  + Headers

            Authorization: Bearer accesstoken
            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

  + Body

              {

              "loyalty": {
                  "id": null,
                  "title": "Mr",
                  "firstName": "Mark",
                  "surname": "Blair",
                  "telephoneNumber": "07404174628",
                  "flatNumber": "Flat 10",
                  "houseNumber": null,
                  "houseName": "Linden place",
                  "addressLine1": "Meadow Gardens",
                  "addressLine2": null,
                  "postalTown": "Staines",
                  "county": "Middlesex",
                  "postcode": "TW18 3HE",
                  "emailAddress": "test@bgdigitaltest.co.uk"
              }
            }


+ Response 200 (application/json)

          {
              "loyalty": {
                  "id": "91270909018",
                  "title": "Mr",
                  "firstName": "Mark",
                  "surname": "Blair",
                  "telephoneNumber": "07404174628",
                  "flatNumber": "Flat 10",
                  "houseNumber": null,
                  "houseName": "Linden place",
                  "addressLine1": "Meadow Gardens",
                  "addressLine2": null,
                  "postalTown": "Staines",
                  "county": "Middlesex",
                  "postcode": "TW18 3HE",
                  "emailAddress": "test@bgdigitaltest.co.uk"
              }
          }

+ Response 400 (application/json)

          {
              "status": "FAIL",
              "data": {},
              "errors": {
                  "postcode": "error.client.postcode.invalid"
              },
              "meta": {}
          }

## Group Service Order

Service Order allows the client to create and modify an appointment for a smart meter exchange

### create a service order [POST /service-orders]

+ id - string
+ startDate - string
+ startTime - string
+ endTime - string
+ userStatusCode - string
+ accounts - array
+ address.flatNumber - string
+ address.houseNumber - string
+ address.houseName - string
+ address.addressLine1 - string
+ address.addressLine2 - string
+ address.postalTown - string
+ address.county - string
+ address.postcode - string
+ address.country - string
+ meta.propspectToken - string A valid prospect token that was created earlier
+ fuelType - string gas, electricity, dual
+ contactNumber - string
+ specialInstruction - string
+ meterType - string, prepay or credit dependant on the tarrif 

+ Parameters

    + id - (optional, string)
    + startDate - (optional, string)
    + endDate - (optional, string)
    + startTime - (optional, string)
    + endTime - (optional, string)
    + statusCode - (optional, string) ...to identify service order is new, rescheduled, or site ineligible
    + accounts - (optional, string array)
    + address.address - (required, string)
    + address.flatNumber - (required, string)
    + address.houseNumber - (required, string)
    + address.houseName - (required, string)
    + address.addressLine1 - (required, string)
    + address.addressLine2 - (required, string)
    + address.postalTown - (required, string)
    + address.county - (required, string)
    + address.postcode - (required, string)
    + address.country - (required, string)
    + address.MPAN - (required, string)
    + address.MPRN - (required, string)
    + meta.propspectToken - (required, string) ...A valid prospect token that was created earlier
    + fuelType - (optional, string) ... gas, electricity, dual
    + contactNumber - (optional, string)
    + specialInstruction - (optional, string)
    + meterType - (optional, string) ...prepay or credit

+ Request

    + Headers

            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

    + Body

            {
            "serviceOrder":
                {
                    "id": null,
                    "startDate": null,
                    "endDate": null,
                    "startTime": null,
                    "endTime": null,
                    "statusCode": null,
                    "accounts": null,
                    "address":
                        {
                            "address": null,
                            "flatNumber": 14,
                            "houseNumber": null,
                            "houseName": "The Rushes",
                            "addressLine1": "Wapshott road",
                            "addressLine2": null,
                            "postalTown": "Staines",
                            "county": "Middlesex",
                            "postcode": "TW183EZ",
                            "MPRN": null,
                            "MPAN": null,
                        }
                    "fuelType": "dual",
                    "contactNumber": null,
                    "specialInstruction": null,
                    "meterType": "prepay",
                },
            "meta":
                {
                    "prospectToken": "cfd7b00c-7c28-5167-a24f-2498f91f26e2"
                }
            }

+ Response 200 (application/json)

        {
            "status": "SUCCESS",
            "data":
                {
                    "serviceOrder":
                        {
                            "id": "RjNiQjNYYlRYbnRtaHpyOG5XWWdmdz09",
                            "startDate": null,
                            "startTime": null,
                            "endDate": null,
                            "endTime": null,
                            "statusCode": null,
                            "accounts": null,
                            "address":
                                {
                                    "address": null,
                                    "flatNumber": 14,
                                    "houseNumber": null,
                                    "houseName": "The Rushes",
                                    "addressLine1": "Wapshott road",
                                    "addressLine2": null,
                                    "postalTown": "Staines",
                                    "county": "Middlesex",
                                    "postcode": "TW183EZ",
                                    "MPRN": null,
                                    "MPAN": null,
                                },
                            "fuelType": "dual",
                            "contactNumber": "",
                            "specialInstruction": "",
                            "meterType": "prepay",
                        }
                },
            "errors": [],
            "meta": {}
        }

+ Response 403 (application/json)

        {
            "status": "FAIL",
            "data": {}
            "errors": [
                {
                    "code": "tbd",
                    "message": "tbd"
                }
            ],
            "meta": {}
        }

### add appointment to a service order [PUT /service-orders/{serviceOrderId}]

+ Parameters

    + serviceOrderId - (required, string) ...the service order being altered
    + statusCode - (optional, string) ...to identify service order is new, rescheduled, or site ineligible
    + smartMeterAppointmentSlotId - (required, string) ...the slot discovered in the appointment slot call
    + cancelAppointment - (optional, boolean)

+ Request

    + Headers

            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

    + Body

            {
                "serviceOrder": 
                {
                    "smartMeterAppointmentSlotId" : "2015-09-28T07:00:00+00:00_1:00pm_5:00pm",
                    "statusCode" : "CANCEL",
                    "cancelAppointment" : "true"
                }
            } 

+ Response 200 (application/json)

        {
            "status": "SUCCESS",
            "data": {},
            "errors": [],
            "meta": {}
        }

+ Response 403 (application/json)

        {
            "status": "FAIL",
            "data": {}
            "errors": [
                {
                    "code": "serviceorder",
                    "message": "error.server.serviceorder.isEmpty"
                }
            ],
            "meta": {}
        }

+ Response 500 (application/json)

        {
            "status": "ERROR",
            "data": {}
            "errors": [
                {
                    "code": "server.error.internal",
                    "message": "An internal error while processing request."
                }
            ],
            "meta": {}
        }

## Group Smart Appointment

Appointments resource endpoint will allow the retrieval of available and/or unavailable appointment slots for a specific service order  

## appointments collection [ /smart-meter-appointment-slots ]
### get appointments [GET /smart-meter-appointment-slots{?serviceOrderId,startDate,range,isUnavailableRequired}]
+ serviceOrderId - (required, string) ... The service order id
+ startDate - (required, string) ... The number of days from now to start appointment search
+ range - (required, string) ... The number of days to search for appointments in
+ isUnavailableRequired - (required, string) ... false if you only want to retrieve available slots

+ Parameters

    + serviceOrderId - (required, string) ... The service order id
    + startDate - (required, number) ...The number of days from now to start appointment search
    + range - (required, number) ...The number of days to search for appointments in
    + isUnavailableRequired - (required, string) ...false if you only want to retrieve available slots

+ Request

    + Headers

            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526
            
+ Response 200 (application/json)

        {
            "status": "SUCCESS",
            "data": {
                "smartMeterAppointmentSlots": [
                    {
                        "date": "2015-09-28T07:00:00+00:00",
                        "id": "2015-09-28T07:00:00+00:00_8:00am_12:00pm",
                        "variant": "4",
                        "startTime": "8:00am",
                        "endTime": "12:00pm",
                        "available": true,
                        "preferredSlot": false
                    },
                    {
                        "date": "2015-09-28T07:00:00+00:00",
                        "id": "2015-09-28T07:00:00+00:00_10:00am_2:00pm",
                        "variant": "4",
                        "startTime": "10:00am",
                        "endTime": "2:00pm",
                        "available": true,
                        "preferredSlot": false
                    },
                    {
                        "date": "2015-09-28T07:00:00+00:00",
                        "id": "2015-09-28T07:00:00+00:00_1:00pm_5:00pm",
                        "variant": "4",
                        "startTime": "1:00pm",
                        "endTime": "5:00pm",
                        "available": true,
                        "preferredSlot": false
                    },
                    {
                        "date": "2015-09-29T07:00:00+00:00",
                        "id": "2015-09-29T07:00:00+00:00_8:00am_12:00pm",
                        "variant": "4",
                        "startTime": "8:00am",
                        "endTime": "12:00pm",
                        "available": false,
                        "preferredSlot": false
                    } 
                ],
                "errors": [],
                "meta": {}
            }
        }

+ Response 403 (application/json)

        {
            "status": "FAIL",
            "data": {}
            "errors": [
                {
                    "code": "serviceorder",
                    "message": "error.server.serviceorder.isEmpty"
                }
            ],
            "meta": {}
        }

+ Response 500 (application/json)

        {
            "status": "ERROR",
            "data": {}
            "errors": [
                {
                    "code": "server.error.internal",
                    "message": "An internal error while processing request."
                }
            ],
            "meta": {}
        }
        

## Group Service Appointment Slots

Slot endpoints will allow the retrieve of a set of appointment slots for a specific service account  

## slots collection [ /slots ]
### retrieve slots [GET /slots{?serviceAccount,type,fault} ]
+ serviceAccount - (required, string) ... The service account id
+ reason - (required, string) ... the type of appointment - ASV, IB, BOTH
+ fault - (optional, string) ... fault code required for an IB booking

+ Parameters

    + serviceAccount - (required, string) ... The service account id
    + reason - (required, string) ... the type of appointment - ASV, IB, BOTH
    + fault - (optional, string) ... fault code required for an IB booking

+ Request

    + Headers

            Authorization: Bearer accesstoken
            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

+ Response 200 (application/json)

        {
            "status": "SUCCESS",
            "data": {
                "slots": [
                    {
                        "id": "919918239012-567891011",
                        "date": "2015-09-29T07:00:00+00:00",
                        "startTime": "08:00",
                        "endTime": "10:00",
                        "available": true,
                        "preferredSlot": false,
                    },
                    {
                        "id": "919918239012-567891012",
                        "date": "2015-09-29T07:00:00+00:00",
                        "startTime": "14:00",
                        "endTime": "16:00",
                        "available": false,
                        "preferredSlot": false,
                    },
                    {
                        "id": "919918239013-567891013",
                        "date": "2015-09-29T07:00:00+00:00",
                        "startTime": "14:00",
                        "endTime": "16:00",
                        "available": true,
                        "preferredSlot": false,
                    }
                ],
            }
            "errors": [],
            "meta": {}
        }

+ Response 403 (application/json)

        {
            "status": "FAIL",
            "data": {}
            "errors": [
                {
                    "code": "serviceaccount",
                    "message": "error.server.serviceaccount.isEmpty"
                }
            ],
            "meta": {}
        }

+ Response 500 (application/json)

        {
            "status": "ERROR",
            "data": {}
            "errors": [
                {
                    "code": "server.error.internal",
                    "message": "An internal error while processing request."
                }
            ],
            "meta": {}
        }

## Group Service Appointments

Appointments and endpoints will allow the retrieve, cancel or set an appointment for a specific service account  

## appointments collection [ /appointments ]
### get appointments [GET /appointments{?serviceAccount} ]
+ serviceAccount - (required, string) ... The service account id

+ Parameters

    + serviceAccount - (required, string) ... The service account id

+ Request

    + Headers

            Authorization: Bearer accesstoken
            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526
    
+ Response 200 (application/json)

        {
            "status": "SUCCESS",
            "data": {
                "appointments": [
                    {
                        "id": "567891011",
                        "account": "919918239012",
                        "status": "booked",
                        "reason": "asv",
                        "showTracking": true,
                        "reschedulable": true,
                        "cancellable": true,
                        "slot": "919918239012-567891011"
                    }
                ],
                "slots": [
                    {
                        "id": "919918239012-567891011",
                        "date": "2015-09-29T07:00:00+00:00",
                        "startTime": "08:00",
                        "endTime": "10:00",
                        "available": false,
                        "preferredSlot": false,
                        "appointment": "567891011"
                    }
                ]
            },
            "errors": [],
            "meta": {}
        }

+ Response 403 (application/json)

        {
            "status": "FAIL",
            "data": {}
            "errors": [
                {
                    "code": "serviceaccount",
                    "message": "error.server.serviceaccount.isEmpty"
                }
            ],
            "meta": {}
        }

+ Response 500 (application/json)

        {
            "status": "ERROR",
            "data": {}
            "errors": [
                {
                    "code": "server.error.internal",
                    "message": "An internal error while processing request."
                }
            ],
            "meta": {}
        }
        
### post appointments [POST /appointments ]

+ Request

    + Headers

            Authorization: Bearer accesstoken
            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

    + Body

            {
                "appointment": 
                {
                    "account" : "919918239012",
                    "slot" : "919918239012-567891011"
                }
            } 

+ Response 200 (application/json)

        {
            "status": "SUCCESS",
            "data": {
                "appointments": [
                    {
                        "id": "567891011",
                        "account": "919918239012",
                        "status": "booked",
                        "reason": "asv",
                        "showTracking": true,
                        "reschedulable": true,
                        "cancellable": true,
                        "slot": "919918239012-567891011"
                    }
                ],
                "slots": [
                    {
                        "id": "919918239012-567891011",
                        "date": "2015-09-29T07:00:00+00:00",
                        "startTime": "08:00",
                        "endTime": "10:00",
                        "available": false,
                        "preferredSlot": false,
                        "appointment": "567891011"
                    }
                ]
            },
            "errors": [],
            "meta": {}
        }

+ Response 403 (application/json)

        {
            "status": "FAIL",
            "data": {}
            "errors": [
                {
                    "code": "serviceaccount",
                    "message": "error.server.serviceaccount.isEmpty"
                }
            ],
            "meta": {}
        }

+ Response 500 (application/json)

        {
            "status": "ERROR",
            "data": {}
            "errors": [
                {
                    "code": "server.error.internal",
                    "message": "An internal error while processing request."
                }
            ],
            "meta": {}
        }
        

### delete appointment [DELETE /appointments/{appointment} ]
+ appointment - (required, string) ... The appointment id that you want to cancel

+ Parameters

    + appointment - (required, string) ... The appointment id that you want to cancel

+ Request

    + Headers

            Authorization: Bearer accesstoken
            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526
    
+ Response 200 (application/json)

        {
            "status": "SUCCESS",
            "data": {},
            "errors": [],
            "meta": {}
        }

+ Response 403 (application/json)

        {
            "status": "FAIL",
            "data": {}
            "errors": [
                {
                    "code": "invalidappointment",
                    "message": "error.server.appointment.invalid"
                }
            ],
            "meta": {}
        }

+ Response 500 (application/json)

        {
            "status": "ERROR",
            "data": {}
            "errors": [
                {
                    "code": "server.error.internal",
                    "message": "An internal error while processing request."
                }
            ],
            "meta": {}
        }
# Group Emails
Email API allows you to send an email. Responses from this API will be retuned in JSON format only.

+ payload - (string, mandatory) - Email payload derived from source API
+ timestamp - (string, mandatory) - Encrypted payload derived from source API
+ checksum - (string, mandatory) - Checksum derived from source API
+ to - (string, mandatory) - To email address derived from source API
+ additionalInformation - (string, optional) - Additional information derived from source API
+ apikey - (string, required) - Key that identifies client to API

## Email Collection [/email]

### Send Email [POST]

+ Request (application/x-www-form-urlencoded)
    
    + Headers
            
            cid: 05e230bf-a9cf-4b31-bc54-d3a995f62526

    + Body
    
            {
                "payload":"",
                "timestamp":"",
                "checksum":"",
                "to":"",
                "additionalInformation":"",
                "apikey":""
            }

+ Response 200 (application/json)
        
            {
                   "status": "SUCCESS",
                   "data":
                       {
                       },
                   "errors":
                       {
                       },
                   "meta":
                       {           
                       }
            }

+ Response 400 (application/json)

        {
            "status": "FAIL",
            "data": {},
            "errors": {
                    "timestamp": "error.client.timestamp.expired"
                },
            "meta": {}
        }
        
+ Response 400 (application/json)

        {
            "status": "FAIL",
            "data": {},
            "errors":
                {
                    "timestamp": "error.client.checksum.expired"
                },
            "meta": {}
        }
+ Response 500 (application/json)

        {
            "status": "ERROR",
            "data": {},
            "errors":{
                "server.error.internal": "An internal error occurred while processing request."
            },
            "meta": {}
        }
        
